[{"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\index.js":"1","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\registerServiceWorker.js":"2","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\App.js":"3","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\AdminLogin.jsx":"4","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ViewSoldProductComponent.jsx":"5","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListProductComponent.jsx":"6","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\AdminViewComplaint.jsx":"7","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListSoldProductComponent.jsx":"8","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\FarmerLogin.jsx":"9","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\FarmerRegistration.jsx":"10","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\AddComplaint.jsx":"11","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ComplaintList.jsx":"12","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ViewComplaint.jsx":"13","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\pages\\Home.js":"14","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\Navbar.js":"15","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\pages\\Products.js":"16","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\pages\\SignUp.js":"17","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\pages\\Services.js":"18","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ProductComponent.jsx":"19","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SoldProductComponent.jsx":"20","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\CreateSupplierComponent.jsx":"21","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListPurchaseComponent.jsx":"22","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SupplierQuoteComponent.jsx":"23","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListQuoteComponent.jsx":"24","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\UpdateQuoteComponent.jsx":"25","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ViewQuoteComponent.jsx":"26","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SupplierLogin.jsx":"27","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\about.jsx":"28","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SupplierProduct.jsx":"29","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\ProductService.js":"30","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\AdminLoginService.js":"31","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\HeroSection.js":"32","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\Cards.js":"33","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\Footer.js":"34","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\Button.js":"35","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\PurchaseService.js":"36","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\SupplierService.js":"37","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\SupplierQuoteService.js":"38","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\FarmerService.jsx":"39","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\CardItem.js":"40","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\SoldProductService.js":"41","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SoldProductQuote.jsx":"42"},{"size":347,"mtime":1611145714570,"results":"43","hashOfConfig":"44"},{"size":4595,"mtime":1611033885000,"results":"45","hashOfConfig":"44"},{"size":4212,"mtime":1611507598796,"results":"46","hashOfConfig":"44"},{"size":3877,"mtime":1611405340472,"results":"47","hashOfConfig":"44"},{"size":2052,"mtime":1611502826851,"results":"48","hashOfConfig":"44"},{"size":2792,"mtime":1611492736458,"results":"49","hashOfConfig":"44"},{"size":1375,"mtime":1611166695586,"results":"50","hashOfConfig":"44"},{"size":3345,"mtime":1611507645763,"results":"51","hashOfConfig":"44"},{"size":4047,"mtime":1611294840972,"results":"52","hashOfConfig":"44"},{"size":7657,"mtime":1611310163841,"results":"53","hashOfConfig":"44"},{"size":3025,"mtime":1611294840972,"results":"54","hashOfConfig":"44"},{"size":2769,"mtime":1611294840972,"results":"55","hashOfConfig":"44"},{"size":1367,"mtime":1611294840982,"results":"56","hashOfConfig":"44"},{"size":301,"mtime":1611493350506,"results":"57","hashOfConfig":"44"},{"size":2714,"mtime":1611493350499,"results":"58","hashOfConfig":"44"},{"size":146,"mtime":1611493350506,"results":"59","hashOfConfig":"44"},{"size":151,"mtime":1611493350507,"results":"60","hashOfConfig":"44"},{"size":138,"mtime":1611493350506,"results":"61","hashOfConfig":"44"},{"size":4547,"mtime":1611493350629,"results":"62","hashOfConfig":"44"},{"size":6549,"mtime":1611507926470,"results":"63","hashOfConfig":"44"},{"size":10715,"mtime":1611493350471,"results":"64","hashOfConfig":"44"},{"size":2408,"mtime":1611493350497,"results":"65","hashOfConfig":"44"},{"size":7045,"mtime":1611493350502,"results":"66","hashOfConfig":"44"},{"size":4061,"mtime":1611493350498,"results":"67","hashOfConfig":"44"},{"size":5130,"mtime":1611493350502,"results":"68","hashOfConfig":"44"},{"size":2466,"mtime":1611493350504,"results":"69","hashOfConfig":"44"},{"size":5219,"mtime":1611493350500,"results":"70","hashOfConfig":"44"},{"size":1345,"mtime":1611493350505,"results":"71","hashOfConfig":"44"},{"size":2159,"mtime":1611494153146,"results":"72","hashOfConfig":"44"},{"size":526,"mtime":1611493045339,"results":"73","hashOfConfig":"44"},{"size":433,"mtime":1611405932711,"results":"74","hashOfConfig":"44"},{"size":419,"mtime":1611493350495,"results":"75","hashOfConfig":"44"},{"size":1578,"mtime":1611493350470,"results":"76","hashOfConfig":"44"},{"size":3404,"mtime":1611493350472,"results":"77","hashOfConfig":"44"},{"size":1019,"mtime":1611493350468,"results":"78","hashOfConfig":"44"},{"size":400,"mtime":1611493350508,"results":"79","hashOfConfig":"44"},{"size":417,"mtime":1611493350509,"results":"80","hashOfConfig":"44"},{"size":840,"mtime":1611494502783,"results":"81","hashOfConfig":"44"},{"size":569,"mtime":1611339197604,"results":"82","hashOfConfig":"44"},{"size":670,"mtime":1611493350469,"results":"83","hashOfConfig":"44"},{"size":688,"mtime":1611500206967,"results":"84","hashOfConfig":"44"},{"size":2381,"mtime":1611507824913,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"kqflye",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"88"},"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\index.js",[],["190","191"],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\registerServiceWorker.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\App.js",["192","193","194"],"\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\nimport Navbar from './components/Navbar';\r\nimport AdminLogin from './components/AdminLogin';\r\nimport ProductComponent from './components/ProductComponent';\r\nimport ListProductComponent from './components/ListProductComponent';\r\nimport ViewSoldProductComponent from './components/ViewSoldProductComponent';\r\n\r\nimport AdminViewComplaint from './components/AdminViewComplaint';\r\nimport SoldProductComponent from './components/SoldProductComponent';\r\nimport ListSoldProductComponent from './components/ListSoldProductComponent';\r\n\r\nimport ListPurchaseComponent from './components/ListPurchaseComponent';\r\nimport CreateSupplierComponent from './components/CreateSupplierComponent';\r\nimport SupplierQuoteComponent from './components/SupplierQuoteComponent';\r\nimport ListQuoteComponent from './components/ListQuoteComponent';\r\nimport UpdateQuoteComponent from './components/UpdateQuoteComponent';\r\nimport ViewQuoteComponent from './components/ViewQuoteComponent';\r\nimport SupplierLogin from './components/SupplierLogin';\r\nimport SupplierProduct from './components/SupplierProduct';\r\n\r\nimport SoldProductQuote from './components/SoldProductQuote';\r\n\r\nimport FarmerLogin from './components/FarmerLogin';\r\nimport FarmerRegistration from './components/FarmerRegistration';\r\n\r\nimport AddComplaint from './components/AddComplaint';\r\nimport ComplaintList from './components/ComplaintList';\r\nimport ViewComplaint from './components/ViewComplaint';\r\n\r\nimport Home from './components/pages/Home';\r\n\r\n\r\nimport Services from './components/pages/Services';\r\nimport Products from './components/pages/Products';\r\nimport SignUp from './components/pages/SignUp';\r\nimport about from './components/about';\r\n\r\n\r\n//import ViewSupplierComponent from './components/ViewSupplierComponent';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Navbar />\r\n        { /* <HeadComponent /> */}\r\n        {/*home*/}\r\n        <Route path='/' exact component={Home} />\r\n        <Route path='/services' component={Services} />\r\n        <Route path='/products' component={Products} />\r\n        <Route path='/sign-up' component={SignUp} />\r\n\r\n        <div className=\"container\">\r\n          <Switch>\r\n            {/*home*/}\r\n\r\n\r\n\r\n            {/*Admin*/}\r\n            <Route path=\"/quoteList\" component={SoldProductQuote}></Route>\r\n            <Route path=\"/adminLogin\" component={AdminLogin}></Route>\r\n            <Route path=\"/productList\" component={ListProductComponent}></Route>\r\n            <Route path=\"/addProduct\" component={ProductComponent}></Route>\r\n            <Route path=\"/soldProductList\" component={ListSoldProductComponent}></Route>\r\n            <Route path=\"/soldProduct\" component={SoldProductComponent}></Route>\r\n            <Route path=\"/viewSoldProduct\" component={ViewSoldProductComponent}></Route>\r\n\r\n\r\n\r\n            {/*supplier*/}\r\n\r\n\r\n            <Route path=\"/add-supplier/:supplierUserName\" component={CreateSupplierComponent}></Route>\r\n            <Route path=\"/supplierLogin\" component={SupplierLogin}></Route>\r\n\r\n            <Route path=\"/supplierQuote\" component={ListQuoteComponent}></Route>\r\n\r\n            <Route path=\"/add-supplierQuote/:quoteId\" component={SupplierQuoteComponent}></Route>\r\n            <Route path=\"/view-supplierQuote/:quoteId\" component={ViewQuoteComponent}></Route>\r\n            <Route path=\"/add-supplierQuote/:quoteId\" component={UpdateQuoteComponent}></Route>\r\n            <Route path=\"/supplierProduct\" component={SupplierProduct}></Route>\r\n\r\n            {/*Farmer*/}\r\n            <Route path=\"/farmerLogin\" component={FarmerLogin}></Route>\r\n            <Route path=\"/add-farmer/:farmerUserName\" component={FarmerRegistration}></Route>\r\n            <Route path=\"/login\" component={AdminLogin}></Route>\r\n            <Route path=\"/add-complaint/:farmerUserName\" component={AddComplaint}></Route>\r\n            <Route path=\"/view-complaint/:farmerUserName\" component={ViewComplaint}></Route>\r\n            <Route path=\"/complaint-list\" component={ComplaintList}></Route>\r\n\r\n\r\n          </Switch>\r\n        </div>\r\n\r\n    \r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\AdminLogin.jsx",["195","196","197","198","199"],"import React, { Component } from 'react'\r\nimport AdminLoginService from '../service/AdminLoginService'\r\nimport { Link } from \"react-router-dom\";\r\n//import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport './AdminLogin.css';\r\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faPhone, faEnvelope, faLock, faUndo, faUserPlus, faUser, faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass AdminLogin extends Component {\r\n  constructor(props) {\r\n      super(props)\r\n\r\n      this.state = {\r\n          adminUserName:\"\",\r\n          adminPassword:\"\"\r\n               \r\n      }\r\n      this.verifyLogin=this.verifyLogin.bind(this);\r\n      \r\n  }\r\n  changeNameHandler=(event) => {\r\n    this.setState({adminUserName: event.target.value});\r\n\r\n  }\r\n  changeUserPasswordHandler=(event) => {\r\n    this.setState({adminPassword: event.target.value});\r\n  }\r\n  verifyLogin=(e) => {\r\n    e.preventDefault();\r\n      let admin = {adminUserName: this.state.adminUserName, adminPassword: this.state.adminPassword};\r\n      console.log('admin => ' + JSON.stringify(admin));\r\n\r\n        AdminLoginService.login(this.state.adminUserName,this.state.adminPassword);\r\n        AdminLoginService.login(this.state.adminUserName,this.state.adminPassword).then((res) => {\r\n        this.setState({admin:res.data});\r\n        console.log(res.data);\r\n        console.log('hello');\r\n        if(\r\n          res.data.adminUserName === this.state.adminUserName &&\r\n          res.data.adminPassword === this.state.adminPassword\r\n        ){\r\n          alert(\"Login Sucessful\");\r\n         \r\n          this.props.history.push(\"/productList\");\r\n        }\r\n        else{\r\n          alert(\"Wrong Credentials\");\r\n        }\r\n      })\r\n     \r\n    }\r\n\r\n    \r\n\r\n\r\n\r\nrender() {\r\n  return (\r\n    <Row className=\"justify-content-md-center\" style={{ \"margin-top\": \"60px\" }}>\r\n  <Col xs={5}>\r\n    <Card className={\"border border-dark bg-white-dark\"} >\r\n      <Card.Header style={{ \"text-align\": \"center\" ,\"fontSize\":\"20px\"}}>\r\n        <FontAwesomeIcon icon={faUser} />LOG-IN\r\n                  </Card.Header>\r\n      <Card.Body>\r\n        \r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col}>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl  required autoComplete=\"off\" type=\"text\" name=\"adminUserName\" value={this.state.adminUserName} onChange={this.changeNameHandler}\r\n                className={\"bg-white text-dark\"} placeholder=\"Enter User Name\" />\r\n            </InputGroup>\r\n            \r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col}>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faLock} /></InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl autoComplete=\"off\" type=\"password\"\r\n                name=\"password\" value={this.state.adminPassword} onChange={this.changeUserPasswordHandler}\r\n                className={\"bg-white text-dark\"} placeholder=\"Enter password\" />\r\n            </InputGroup>\r\n            \r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        \r\n        </Card.Body>\r\n            <Card.Footer style={{ \"text-align\": \"center\"}}>\r\n              <Button size=\"sm\" type=\"button\" variant=\"success\" style={{ \"width\":\"80%\",\"padding\":\"10px\"}} onClick={this.verifyLogin}>\r\n                <FontAwesomeIcon icon={faUserPlus} /> Log-In\r\n                            </Button>{' '}<br></br>\r\n                            \r\n            </Card.Footer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n\r\n   \r\n    \r\n         \r\n        \r\n  \r\n}\r\n}\r\nexport default AdminLogin;","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ViewSoldProductComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListProductComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\AdminViewComplaint.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListSoldProductComponent.jsx",["200"],"import React, { Component } from 'react'\r\nimport SoldProductService from '../service/SoldProductService';\r\nimport SupplierQuoteService from '../service/SupplierQuoteService';\r\n\r\nclass ListSoldProductComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                soldProducts: []\r\n        }\r\n        this.listSellProduct = this.listSellProduct.bind(this);\r\n        this.viewSoldProduct = this.viewSoldProduct.bind(this);\r\n        this.viewSupplierQuote = this.viewSupplierQuote.bind(this);\r\n        \r\n       \r\n       \r\n      \r\n       \r\n    }\r\n\r\n    listSellProduct(){\r\n        this.props.history.push('/soldProduct'); \r\n    }\r\n\r\n    viewSoldProduct(invoiceId) {\r\n        this.props.history.push(`/viewSoldProduct/${invoiceId}`);\r\n    }\r\n\r\n    viewSupplierQuote(){\r\n        this.props.history.push('/quoteList'); \r\n    }\r\n\r\n    \r\n    \r\n    \r\n    componentDidMount() {\r\n        SoldProductService.getAllQuote().then((res) => {\r\n            this.setState({ soldProducts: res.data });\r\n        });\r\n    }\r\n\r\n   \r\n\r\nrender() {\r\n    return (\r\n        <div>\r\n             <h2 className=\"text-center\">Product List</h2>\r\n             <div className = \"row\">\r\n                <button className=\"btn btn-primary\" onClick={this.listSellProduct}>Sell Product</button>\r\n                <button   style={{\"marginLeft\":\"10px\"}} className=\"btn btn-primary\" onClick={this.viewSupplierQuote}> View Supplier Quote</button>\r\n             </div>\r\n             <br></br>\r\n             <div className = \"row\">\r\n                    <table className = \"table table-striped table-bordered\">\r\n\r\n                        <thead>\r\n                            <tr>\r\n                               \r\n                                <th>Supplier UserName</th>\r\n                                <th> Product Name</th>\r\n                                <th> Quantity </th>\r\n                                <th> Quoted Price </th> \r\n                                <th> Actions</th>\r\n                               \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.soldProducts.map(\r\n                                    soldProduct => \r\n                                    <tr key = {soldProduct.invoiceId}>\r\n                                        <td> {soldProduct.userName} </td>   \r\n                                         <td> {soldProduct.productName} </td>   \r\n                                         <td> {soldProduct.quantity}</td>\r\n                                         <td> {soldProduct.quotePrice}</td>\r\n                                        \r\n                                         <td>\r\n                                            \r\n                                             <button style={{marginLeft: \"10px\"}} onClick={ () => this.viewSoldProduct(soldProduct.invoiceId)} className=\"btn btn-info\">View </button>\r\n                                         </td>\r\n                                         \r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n\r\n             </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default ListSoldProductComponent","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\FarmerLogin.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\FarmerRegistration.jsx",["201"],"import React, { Component } from 'react'\r\nimport FarmerService from '../service/FarmerService';\r\nimport \"./FarmerRegistration.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nconst addressRegex = RegExp(\r\n  /^[#.0-9a-zA-Z\\s,-]+$/\r\n);\r\n\r\nconst numberRegex = RegExp(\r\n  /^[0][1-9]\\d{9}$|^[1-9]\\d{9}$/\r\n);\r\n\r\nconst passwordRegex = RegExp(\r\n  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/\r\n);\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true;\r\n\r\n  // validate form errors being empty\r\n  Object.values(formErrors).forEach(val => {\r\n    val.length > 0 && (valid = false);\r\n  });\r\n\r\n  // validate the form was filled out\r\n  Object.values(rest).forEach(val => {\r\n    val === null && (valid = false);\r\n  });\r\n\r\n  return valid;\r\n};\r\n\r\nclass FarmerRegistration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      farmerName: '',\r\n      //farmerUserName: this.props.match.params.farmerUserName,\r\n      farmerUserName:'',\r\n      farmerAddress: '',\r\n      farmerContactNo: '',\r\n      farmerPassword: '',\r\n      \r\n      formErrors: {\r\n        farmerName: \"\",\r\n        farmerUserName: \"\",\r\n        farmerAddress: \"\",\r\n        farmerContactNo: \"\",\r\n        farmerPassword: \"\"\r\n        \r\n      }\r\n    };\r\n\r\n   \r\n  \r\n    this.saveFarmer =this.saveFarmer.bind(this);\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    // step 4\r\n    if (this.state.farmerUserName === '_add') {\r\n      return\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  saveFarmer = (e) => {\r\n    e.preventDefault();\r\n    let farmer = { farmerName: this.state.farmerName, farmerUserName: this.state.farmerUserName, farmerAddress: this.state.farmerAddress, farmerContactNo: this.state.farmerContactNo, farmerPassword: this.state.farmerPassword };\r\n    if(this.state.password !== this.state.password)\r\n    alert(\"Given password and confirm password should be same \");\r\n    console.log('farmer => ' + JSON.stringify(farmer));\r\n\r\n    FarmerService.register(farmer).then(res => {\r\n      this.props.history.push('/farmerLogin');\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (formValid(this.state)) {\r\n      console.log(`\r\n          --SUBMITTING--\r\n          farmer Name: ${this.state.name}\r\n          User Name: ${this.state.farmerUserName}\r\n          Address: ${this.state.Address}\r\n          Contact Number: ${this.state.contactNumber}\r\n          password:${this.state.password}\r\n          \r\n        `);\r\n    } else {\r\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"farmerName\":\r\n        formErrors.farmerName =\r\n          value.length < 5 ? \"minimum 5 characaters required\" : \"\";\r\n        break;\r\n      case \"farmerUserName\":\r\n        formErrors.farmerUserName =\r\n          value.length < 5 ? \"minimum 5 characaters required\" : \"\";\r\n        break;\r\n      case \"farmerAddress\":\r\n        formErrors.farmerAddress = addressRegex.test(value)\r\n          ? \"\"\r\n          : \"Invalid Address \";\r\n        break;\r\n      case \"farmerContactNo\":\r\n        formErrors.farmerContactNo = numberRegex.test(value)\r\n          ? \"\"\r\n          : \"invalid Contact Number\";\r\n        break;\r\n      case \"farmerPassword\":\r\n        formErrors.farmerPassword = passwordRegex.test(value)\r\n          ? \"\"\r\n          : \"Enter valid password\";\r\n        break;\r\n     \r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n  };\r\n\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n    return (\r\n\r\n      <div className=\"wrapper\">\r\n        <div className=\"form-wrapper\">\r\n          <div> <h3 className=\"title\">Farmer Registration</h3></div>\r\n          <form onSubmit={this.handleSubmit} noValidate>\r\n            <div className=\"name\">\r\n              <label htmlFor=\"firstName\" className=\"farmerLable\">Farmer Name</label>\r\n              <input\r\n                className={formErrors.farmerName.length > 0 ? \"error\" : null}\r\n                placeholder=\"Name\"\r\n                type=\"text\"\r\n                name=\"farmerName\"\r\n                value={this.state.farmerName}\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.farmerName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.farmerName}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"farmerUserName\">\r\n              <label htmlFor=\"farmerUserName\" className=\"farmerLable\">UserName</label>\r\n              <input\r\n                className={formErrors.farmerUserName.length > 0 ? \"error\" : null}\r\n                placeholder=\"UserName\"\r\n                type=\"text\"\r\n                name=\"farmerUserName\"\r\n                value={this.state.farmerUserName}\r\n                \r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.farmerUserName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.farmerUserName}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"Address\">\r\n              <label htmlFor=\"Address\" className=\"farmerLable\">Address</label>\r\n              <input\r\n                className={formErrors.farmerAddress.length > 0 ? \"error\" : null}\r\n                placeholder=\"Address\"\r\n                type=\"Address\"\r\n                name=\"farmerAddress\"\r\n                value={this.state.farmerAddress}\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.farmerAddress.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.farmerAddress}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"contactNumber\">\r\n              <label htmlFor=\"contactNumber\" className=\"farmerLable\">Contact Number</label>\r\n              <input\r\n                className={formErrors.farmerContactNo.length > 0 ? \"error\" : null}\r\n                placeholder=\"contactNumber\"\r\n                type=\"contactNumber\"\r\n                name=\"farmerContactNo\"\r\n                value={this.state.farmerContactNo}\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.farmerContactNo.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.farmerContactNo}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"password\">\r\n              <label htmlFor=\"password\" className=\"farmerLable\">Password</label>\r\n              <input\r\n                className={formErrors.farmerPassword.length > 0 ? \"error\" : null}\r\n                placeholder=\"farmerPassword\"\r\n                type=\"farmerPassword\"\r\n                name=\"farmerPassword\"\r\n                value={this.state.farmerPassword}\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.farmerPassword.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.farmerPassword}</span>\r\n              )}\r\n            </div>\r\n\r\n            \r\n\r\n            <div className=\"createAccount\">\r\n              <button className=\"button\" onClick={this.saveFarmer}>Create Account</button>\r\n              <small>Already Have an Account?  <Link to=\"/farmerLogin\" >Log In</Link></small>\r\n              \r\n\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default FarmerRegistration\r\n","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\AddComplaint.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ComplaintList.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ViewComplaint.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\pages\\Home.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\Navbar.js",["202"],"import React, { useState, useEffect } from 'react';\r\nimport { Button } from './Button';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport './Button.css';\r\n\r\nfunction Navbar() {\r\n  const [click, setClick] = useState(false);\r\n  const [button, setButton] = useState(true);\r\n\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 960) {\r\n      setButton(false);\r\n    } else {\r\n      setButton(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n\r\n  window.addEventListener('resize', showButton);\r\n\r\n  return (\r\n    <>\r\n      <nav className='navbar'>\r\n        <div className='navbar-container'>\r\n          <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\r\n            <h3 style={{\"marginBottom\":\"26px\"}}>Farmer Assistance </h3>\r\n            <i class='fab fa-typo3' />\r\n          </Link>\r\n          <div className='menu-icon' onClick={handleClick}>\r\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n          </div>\r\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n            <li className='nav-item'>\r\n              <Link to='/' className='nav-links' onClick={closeMobileMenu}>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link\r\n                to='/supplierLogin'\r\n                className='nav-links'\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Supplier\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link\r\n                to='/farmerLogin'\r\n                className='nav-links'\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Farmer\r\n              </Link>\r\n            </li>\r\n\r\n            <li className='nav-item'>\r\n              <Link\r\n                to='/'\r\n                className='nav-links'\r\n                onClick={closeMobileMenu}\r\n              >\r\n              Logout\r\n              </Link>\r\n            </li>\r\n\r\n               \r\n            <li>\r\n              <Link\r\n                to='/sign-up'\r\n                className='nav-links-mobile'\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Sign Up\r\n              </Link>\r\n            </li>\r\n              \r\n            </ul>\r\n        <button style={{\"color\":\"white\",\"marginBottom\":\"21px\",\"width\":\"140px\",\"borderRadius\":\"10px\"}}><span  style={{\"color\":\"black\"}} ><Link to=\"/adminLogin\" style={{\"color\":\"black\"}}>Admin </Link></span></button>\r\n       \r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\pages\\Products.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\pages\\SignUp.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\pages\\Services.js",["203"],"import React from 'react';\r\nimport '../../App.css';\r\n\r\nexport default function Services() {\r\n  return <h1 className='services'></h1>;\r\n}\r\n","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ProductComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SoldProductComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\CreateSupplierComponent.jsx",["204","205","206","207","208","209","210","211"],"\r\nimport React, { Component } from 'react';\r\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SupplierService from '../service/SupplierService';\r\nimport { faPhone, faEnvelope, faLock, faUndo, faUserPlus, faUser, faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst addressRegex = RegExp(\r\n  /^[#.0-9a-zA-Z\\s,-]+$/\r\n);\r\n\r\nconst numberRegex = RegExp(\r\n  /^[0][1-9]\\d{9}$|^[1-9]\\d{9}$/\r\n);\r\n\r\nconst passwordRegex = RegExp(\r\n  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/\r\n);\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true;\r\n\r\n  // validate form errors being empty\r\n  Object.values(formErrors).forEach(val => {\r\n    val.length > 0 && (valid = false);\r\n  });\r\n\r\n  // validate the form was filled out\r\n  Object.values(rest).forEach(val => {\r\n    val === null && (valid = false);\r\n  });\r\n\r\n  return valid;\r\n};\r\n\r\nclass CreateSupplierComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      supplierName: '',\r\n      supplierUserName:'',\r\n      supplierAddress: '',\r\n      supplierContactNumber: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      formErrors: {\r\n        supplierName: \"\",\r\n        supplierUserName: \"\",\r\n        supplierAddress: \"\",\r\n        supplierContactNumber: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n      }\r\n    };\r\n\r\n    this.saveSupplier = this.saveSupplier.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    // step 4\r\n    if (this.state.supplierUserName === '_add') {\r\n      return\r\n    }\r\n  }\r\n\r\n  saveSupplier = (e) => {\r\n    e.preventDefault();\r\n    let supplier = { supplierName: this.state.supplierName, supplierUserName: this.state.supplierUserName, supplierAddress: this.state.supplierAddress, supplierContactNumber: this.state.supplierContactNumber, password: this.state.password, confirmPassword: this.state.confirmPassword };\r\n    if (this.state.password !== this.state.confirmPassword)\r\n      alert(\"Given password and confirm password should be same \");\r\n    console.log('supplier => ' + JSON.stringify(supplier));\r\n\r\n    SupplierService.createSupplier(supplier).then(res => {\r\n      this.props.history.push('/supplierLogin');\r\n\r\n    });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (formValid(this.state)) {\r\n      console.log(`\r\n          --SUBMITTING--\r\n          Supplier Name: ${this.state.name}\r\n          User Name: ${this.state.supplierUserName}\r\n          Address: ${this.state.Address}\r\n          Contact Number: ${this.state.contactNumber}\r\n          password:${this.state.password}\r\n          confirmPassword:${this.state.confirmPassword}\r\n        `);\r\n    } else {\r\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"supplierName\":\r\n        formErrors.supplierName =\r\n          value.length < 5 ? \"minimum 5 characters required\" : \"\";\r\n        break;\r\n      case \"supplierUserName\":\r\n        formErrors.supplierUserName =\r\n          value.length < 5 ? \"minimum 5 characters required\" : \"\";\r\n        break;\r\n      case \"supplierAddress\":\r\n        formErrors.supplierAddress = addressRegex.test(value)\r\n          ? \"\"\r\n          : \"Invalid Address \";\r\n        break;\r\n      case \"supplierContactNumber\":\r\n        formErrors.supplierContactNumber = numberRegex.test(value)\r\n          ? \"\"\r\n          : \"invalid Contact Number\";\r\n        break;\r\n      case \"password\":\r\n        formErrors.password = passwordRegex.test(value)\r\n          ? \"\"\r\n          : \"Enter valid password (A-z),(!@#),(0-9)\";\r\n        break;\r\n      case \"confirmPassword\":\r\n        formErrors.confirmPassword = passwordRegex.test(value) ? \"\" : \"Enter valid password (A-z),(!@#),(0-9)\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n  };\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    return (\r\n      <Row className=\"justify-content-md-center\" style={{ \"margin-top\": \"60px\" }}>\r\n        <Col xs={5}>\r\n          <Card className={\"border border-dark bg-white-dark\"} >\r\n            <Card.Header style={{ \"text-align\": \"center\" ,\"fontSize\":\"20px\"}}>\r\n              <FontAwesomeIcon icon={faUsers} />SIGN-UP\r\n                        </Card.Header>\r\n            <Card.Body>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.supplierName.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"text\" name=\"supplierName\" value={this.state.supplierName} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark \"} placeholder=\"Enter Name\" />\r\n                  </InputGroup>\r\n                  {formErrors.supplierName.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.supplierName}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.supplierUserName.length > 0 ? \"error\" : null} required required autoComplete=\"off\" type=\"text\" name=\"supplierUserName\" value={this.state.supplierUserName} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter User Name\" />\r\n                  </InputGroup>\r\n                  {formErrors.supplierUserName.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.supplierUserName}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n           \r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faPhone} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.supplierContactNumber.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"contactNumber\"\r\n                      name=\"supplierContactNumber\" value={this.state.supplierContactNumber} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter Contact Number\" />\r\n                  </InputGroup>\r\n                  {formErrors.supplierContactNumber.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.supplierContactNumber}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faLock} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.confirmPassword.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"password\"\r\n                      name=\"password\" value={this.state.password} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter password\" />\r\n                  </InputGroup>\r\n                  {formErrors.password.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.password}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faLock} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.confirmPassword.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\r\n                      value={this.state.confirmPassword} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter Confirm password\" />\r\n                  </InputGroup>\r\n                  {formErrors.confirmPassword.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.confirmPassword}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n              \r\n                 <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faEnvelope} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.supplierAddress.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"textarea\" name=\"supplierAddress\" value={this.state.supplierAddress} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter Address\" />\r\n                  </InputGroup>\r\n                  {formErrors.supplierAddress.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.supplierAddress}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n            </Card.Body>\r\n            <Card.Footer style={{ \"text-align\": \"center\"}}>\r\n              <Button size=\"sm\" type=\"button\" variant=\"success\" style={{ \"width\":\"80%\",\"padding\":\"10px\"}} onClick={this.saveSupplier}  disabled={this.state.password.length === 0||this.state.supplierName.length === 0||this.state.supplierUserName.length === 0||this.state.supplierAddress.length === 0||this.state.supplierContactNumber.length === 0||this.state.password.length === 0||this.state.confirmPassword.length === 0}>\r\n                <FontAwesomeIcon icon={faUserPlus} /> SIGN-UP\r\n                            </Button>{' '}<br></br>\r\n                            <small><Link to=\"/supplierLogin\">Already Have an Account? - Log-in</Link></small>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default CreateSupplierComponent","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListPurchaseComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SupplierQuoteComponent.jsx",["212","213","214","215","216","217","218","219"],"import React, { Component } from 'react'\r\n import SupplierQuoteService from '../service/SupplierQuoteService';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./SupplierQuote.css\";\r\nimport {Row, Col, Card, Form, InputGroup, FormControl, Button} from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SupplierQuoteComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            // step 2\r\n            quoteId: this.props.match.params.quoteId,\r\n            userName: '',\r\n            productName: '',\r\n            quantity: '',\r\n            quotePrice: '',\r\n            product: ''\r\n        }\r\n        this.changeUserNameHandler = this.changeUserNameHandler.bind(this);\r\n        this.changeProductNameHandler = this.changeProductNameHandler.bind(this);\r\n        this.changeQuantityHandler = this.changeQuantityHandler.bind(this);\r\n        this.changeQuotePriceHandler = this.changeQuotePriceHandler.bind(this);\r\n        this.changeProductHandler = this.changeProductHandler.bind(this);\r\n        this.saveOrUpdateQuote = this.saveOrUpdateQuote.bind(this);\r\n    }\r\n\r\n    // step 3\r\n    componentDidMount() {\r\n\r\n        // step 4\r\n        if (this.state.quoteId === '_add') {\r\n            return\r\n        } else {\r\n            SupplierQuoteService.getQuoteById(this.state.quoteId).then((res) => {\r\n                let supplierQuote = res.data;\r\n                this.setState({\r\n                    userName: supplierQuote.userName,\r\n                    productName: supplierQuote.productName,\r\n                    quantity: supplierQuote.quantity,\r\n                    quotePrice: supplierQuote.quotePrice,\r\n                    // product:supplierQuote.product\r\n                });\r\n            });\r\n        }\r\n    }\r\n    saveOrUpdateQuote = (e) => {\r\n        e.preventDefault();\r\n        let supplierQuote = { userName: this.state.userName, productName: this.state.productName, quantity: this.state.quantity, quotePrice: this.state.quotePrice }; //product: this.state.product\r\n        console.log('supplierQuote => ' + JSON.stringify(supplierQuote));\r\n\r\n        // SupplierQuoteService.insertQuote(supplierQuote).then(res => {\r\n        // this.props.history.push('/addQuote');\r\n\r\n        // step 5\r\n        if (this.state.quoteId === '_add') {\r\n            SupplierQuoteService.insertQuote(supplierQuote).then(res => {\r\n                this.props.history.push('/supplierQuote');\r\n            });\r\n        }\r\n        else {\r\n            SupplierQuoteService.updatePrice(supplierQuote, this.state.quoteId).then(res => {\r\n                this.props.history.push('/supplierQuote');\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    changeUserNameHandler = (event) => {\r\n        this.setState({ userName: event.target.value });\r\n    }\r\n\r\n    changeProductNameHandler = (event) => {\r\n        this.setState({ productName: event.target.value });\r\n    }\r\n\r\n    changeQuantityHandler = (event) => {\r\n        this.setState({ quantity: event.target.value });\r\n    }\r\n\r\n    changeQuotePriceHandler = (event) => {\r\n        this.setState({ quotePrice: event.target.value });\r\n    }\r\n\r\n    changeProductHandler = (event) => {\r\n        this.setState({ product: event.target.value });\r\n    }\r\n\r\n    addQuote() {\r\n        this.props.history.push('/add-supplierQuote/_add');\r\n    }\r\n\r\n    \r\n    cancel() {\r\n        this.props.history.push('/supplierQuote');\r\n    }\r\n    \r\n    getTitle() {\r\n        if (this.state.quoteId === '_add') {\r\n            return <h3 className=\"quote\">Add Quote</h3>\r\n        } else {\r\n            return <h3 className=\"text-center\">Update </h3>\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n           \r\n            <br></br>\r\n               <div className = \"container\">\r\n               \r\n                    <div className = \"row\">\r\n                        <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                        {\r\n                                this.getTitle()\r\n                            }\r\n                            <div className = \"card-body\">\r\n                                <form >\r\n                                    <div className=\"userName\">\r\n                                        <label className=\"Label\"> User Name: </label>\r\n                                        <input placeholder=\"User Name\" name=\"userName\" className=\"form-control\"\r\n                                            value={this.state.userName} onChange={this.changeUserNameHandler} />\r\n                                    </div>\r\n                                    <div className=\"Product\">\r\n                                        <label className=\"Label\"> Product Name: </label>\r\n                                        <input placeholder=\"Product Name\" name=\"ProductName\" className=\"form-control\"\r\n                                            value={this.state.productName}  onChange={this.changeProductNameHandler} />\r\n                                    </div>\r\n                                    <div className=\"quantity\">\r\n                                        <label className=\"Label\">Quantity: </label>\r\n                                        <input placeholder=\"Quantity\" name=\"quantity\" className=\"form-control\"\r\n                                            value={this.state.quantity} onChange={this.changeQuantityHandler} />\r\n                                    </div>\r\n                                    <div className=\"quotePrice\">\r\n                                        <label className=\"Label\">Quote Price: </label>\r\n                                        <input placeholder=\"Quote Price\" name=\"quotePrice\" className=\"form-control\"\r\n                                            value={this.state.quotePrice}  onChange={this.changeQuotePriceHandler} />\r\n                                    </div>\r\n                                    {/* <div className = \"form-group\">\r\n                                            <label>Product: </label>\r\n                                            <input placeholder=\"Product\" name=\"product\" className=\"form-control\" \r\n                                                value={this.state.product} onChange={this.changeProductHandler}/>\r\n                                        </div> */}\r\n                                    <div className=\"button\">\r\n                                    <button className=\"btn btn-success\"  onClick={this.saveOrUpdateQuote} disabled={this.state.userName.length === 0||this.state.productName.length === 0||this.state.quantity.length === 0||this.state.quotePrice.length === 0}>Save</button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{ marginLeft: \"10px\" }}>Cancel</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SupplierQuoteComponent","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListQuoteComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\UpdateQuoteComponent.jsx",["220"],"import React, { Component } from 'react'\r\n import SupplierQuoteService from '../service/SupplierQuoteService';\r\n import { Link } from \"react-router-dom\";\r\n\r\nclass UpdateQuoteComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            // step 2\r\n            quoteId: this.props.match.params.quoteId,\r\n            userName: '',\r\n            productName: '',\r\n            quantity: '',\r\n            quotePrice: '',\r\n            product: ''\r\n        }\r\n        this.changeUserNameHandler = this.changeUserNameHandler.bind(this);\r\n        this.changeProductNameHandler = this.changeProductNameHandler.bind(this);\r\n        this.changeQuantityHandler = this.changeQuantityHandler.bind(this);\r\n        this.changeQuotePriceHandler = this.changeQuotePriceHandler.bind(this);\r\n        this.changeProductHandler = this.changeProductHandler.bind(this);\r\n        this.updatePrice = this.updatePrice.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        SupplierQuoteService.getQuoteById(this.state.quoteId).then((res) => {\r\n            let supplierQuote = res.data;\r\n            this.setState({\r\n                userName: supplierQuote.userName,\r\n                productName: supplierQuote.productName,\r\n                quantity: supplierQuote.quantity,\r\n                quotePrice: supplierQuote.quotePrice,\r\n\r\n            });\r\n        });\r\n    }\r\n\r\n    updatePrice = (e) => {\r\n        e.preventDefault();\r\n        let supplierQuote = { userName: this.state.userName, productName: this.state.productName, quantity: this.state.quantity, quotePrice: this.state.quotePrice };\r\n        console.log('supplierQuote => ' + JSON.stringify(supplierQuote));\r\n        console.log('quoteId => ' + JSON.stringify(this.state.quoteId));\r\n        SupplierQuoteService.updatePrice(supplierQuote, this.state.quoteId).then(res => {\r\n            this.props.history.push('/supplierQuote');\r\n        });\r\n    }\r\n\r\n\r\n    changeUserNameHandler = (event) => {\r\n        this.setState({ userName: event.target.value });\r\n    }\r\n\r\n    changeProductNameHandler = (event) => {\r\n        this.setState({ productName: event.target.value });\r\n    }\r\n\r\n    changeQuantityHandler = (event) => {\r\n        this.setState({ quantity: event.target.value });\r\n    }\r\n\r\n    changeQuotePriceHandler = (event) => {\r\n        this.setState({ quotePrice: event.target.value });\r\n    }\r\n\r\n    changeProductHandler = (event) => {\r\n        this.setState({ product: event.target.value });\r\n    }\r\n\r\n    cancel() {\r\n        this.props.history.push('/supplierQuote');\r\n    }\r\n\r\n  \r\n    render() {\r\n        return (\r\n            <div >\r\n           \r\n            <br></br>\r\n               <div className = \"container\">\r\n               \r\n                    <div className = \"row\">\r\n                        <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n            \r\n                            <div className = \"card-body\">\r\n                                <form >\r\n                                    <div className=\"form-group\">\r\n                                        <label> User Name: </label>\r\n                                        <input placeholder=\"User Name\" name=\"userName\" className=\"form-control\"\r\n                                            value={this.state.userName} onChange={this.changeUserNameHandler} />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label> Product Name: </label>\r\n                                        <input placeholder=\"Product Name\" name=\"ProductName\" className=\"form-control\"\r\n                                            value={this.state.productName} onChange={this.changeProductNameHandler} />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Quantity: </label>\r\n                                        <input placeholder=\"Quantity\" name=\"quantity\" className=\"form-control\"\r\n                                            value={this.state.quantity} onChange={this.changeQuantityHandler} />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Quote Price: </label>\r\n                                        <input placeholder=\"Quote Price\" name=\"quotePrice\" className=\"form-control\"\r\n                                            value={this.state.quotePrice} onChange={this.changeQuotePriceHandler} />\r\n                                    </div>\r\n\r\n                                    <button className=\"btn btn-success\" onClick={this.updatePrice}> Save</button>\r\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{ marginLeft: \"10px\" }}>Cancel</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateQuoteComponent\r\n","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ViewQuoteComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SupplierLogin.jsx",["221","222","223","224"],"import React, { Component } from 'react'\r\n// import SupplierService from '../service/SupplierService'\r\nimport { Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SupplierService from '../service/SupplierService';\r\nimport { faPhone, faEnvelope, faLock, faUndo, faUserPlus, faUser, faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Row, Col, Card, Form, InputGroup, FormControl, Button} from 'react-bootstrap';\r\n\r\n\r\nconst passwordRegex = RegExp(\r\n  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/\r\n);\r\n\r\nclass SupplierLogin extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      supplierUserName: \"\",\r\n      password: \"\"\r\n\r\n    }\r\n    //this.quoteList = this.quoteList.bind(this);\r\n  }\r\n\r\n  changeSupplierUserNameHandler = (event) => {\r\n    this.setState({ supplierUserName: event.target.value });\r\n\r\n}\r\nchangePasswordHandler = (event) => {\r\n    this.setState({ password: event.target.value });\r\n}\r\n\r\n// quoteList() {\r\n//   this.props.history.push('/supplierQuote');\r\n// }\r\n\r\nhandleChange = e => {\r\n  e.preventDefault();\r\n  const { name, value } = e.target;\r\n  let formErrors = { ...this.state.formErrors };\r\n\r\n  switch (name) {\r\n   \r\n    case \"supplierUserName\":\r\n      formErrors.supplierUserName =\r\n        value.length < 5 ? \"minimum 5 characters required\" : \"\";\r\n      break;\r\n \r\n    case \"password\":\r\n      formErrors.password = passwordRegex.test(value)\r\n        ? \"\"\r\n        : \"Enter valid password\";\r\n      break;\r\n   \r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n};\r\n\r\n\r\nverifyLogin = (e) => {\r\n  e.preventDefault();\r\n  let supplier = { supplierUserName: this.state.supplierUserName, password: this.state.password };\r\n  console.log('supplier => ' + JSON.stringify(supplier));\r\n\r\n  //FarmerService.getFarmerById(this.state.farmerUserName);\r\n  //FarmerService.getFarmerById(this.state.farmerUserName).then((res) => {\r\n  SupplierService.supplierLogin(this.state.supplierUserName, this.state.password);\r\n  SupplierService.supplierLogin(this.state.supplierUserName, this.state.password).then((res) => {\r\n      this.setState({ supplier: res.data });\r\n      console.log('hello');\r\n      console.log(res.data);\r\n      if (\r\n          res.data.supplierUserName === this.state.supplierUserName &&\r\n          res.data.password === this.state.password){\r\n          alert(\"Login Successful\");\r\n\r\n          this.props.history.push(\"supplierQuote\");\r\n      }\r\n\r\n      else {\r\n          alert(\"Enter valid User name and password\");\r\n      }\r\n  })\r\n\r\n}\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Row className=\"justify-content-md-center\" style={{ \"margin-top\": \"100px\" }}>\r\n      <Col xs={5}>\r\n        <Card className={\"border border-dark bg-white-dark\"} >\r\n          <Card.Header style={{ \"text-align\": \"center\", \"fontSize\": \"20px\" }}>\r\n            <FontAwesomeIcon icon={faUser} /> LOG-IN\r\n                </Card.Header>\r\n          <Card.Body>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl  required autoComplete=\"off\" type=\"text\" name=\"supplierUserName\" value={this.state.supplierUserName} onChange={this.handleChange}\r\n                    className={\"bg-white text-dark\"} placeholder=\"Enter User Name\" />\r\n                </InputGroup>\r\n                {/* {formErrors.supplierUserName.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.supplierUserName}</span>\r\n                )} */}\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text><FontAwesomeIcon icon={faLock} /></InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl  autoComplete=\"off\" type=\"password\"\r\n                    name=\"password\" value={this.state.password} onChange={this.handleChange}\r\n                    className={\"bg-white text-dark\"} placeholder=\"Enter password\" />\r\n                </InputGroup>\r\n                {/* {formErrors.password.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.password}</span>\r\n                )} */}\r\n              </Form.Group>\r\n            </Form.Row>\r\n          </Card.Body>\r\n          <Card.Footer style={{ \"text-align\": \"center\" }}>\r\n            <Button size=\"sm\" type=\"button\" variant=\"success\" style={{ \"width\": \"80%\", \"padding\": \"10px\" }} onClick={this.verifyLogin} disabled={this.state.supplierUserName.length === 0|| this.state.password.length === 0}>\r\n              <FontAwesomeIcon icon={faUserPlus} /> LOG-IN\r\n                          </Button>{' '}<br></br>\r\n            <small><Link to=\"/add-supplier/:supplierUserName\">New User? - Sign-Up</Link></small>\r\n          </Card.Footer>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    );\r\n  }\r\n}\r\nexport default SupplierLogin;","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\about.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SupplierProduct.jsx",["225"],"import React, { Component } from 'react'\r\nimport ProductService from '../service/ProductService';\r\nimport SupplierQuoteService from '../service/SupplierQuoteService'\r\nimport \"./ListQuote.css\";\r\n\r\n\r\nclass SupplierProduct extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            product: []\r\n        }\r\n        this.addQuote = this.addQuote.bind(this);\r\n\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        ProductService.getAllProduct().then((res) => {\r\n            this.setState({ product: res.data });\r\n        });\r\n    }\r\n\r\n    addQuote() {\r\n        this.props.history.push('/add-supplierQuote/_add');\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n          \r\n              \r\n                <div className=\"body_wrap \">\r\n                    <div>\r\n                        <h2 className=\"box_title\">Product List</h2>\r\n                        <div className=\"row\">\r\n                            <button    className=\"btn btn-primary\" onClick={this.addQuote}> Add Quote</button>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bordered\">\r\n\r\n                        <thead>\r\n                            <tr>\r\n                                <th> Product Name</th>\r\n                                <th> Product Description</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.product.map(\r\n                                    products =>\r\n                                        <tr key={products.productId}>\r\n\r\n                                            <td> {products.productName} </td>\r\n                                            <td> {products.productDescription}</td>\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n            </div>\r\n             </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SupplierProduct\r\n","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\ProductService.js",["226","227"],"import axios from 'axios';\r\n\r\nconst PRODUCT_API_BASE_URL = \"http://localhost:8082/api/v1/addproduct\";\r\n\r\nclass ProductService {\r\n\r\n    getAllProduct(){\r\n        return axios.get(\"http://localhost:8082/api/v1/addproduct\");\r\n    }\r\n\r\n   \r\n\r\n    insertProduct(product){\r\n        return axios.post(\"http://localhost:8082/api/v1/addproduct\", product);\r\n    }\r\n\r\n    deleteProduct(productId){\r\n        return axios.delete(\"http://localhost:8082/api/v1/addproduct\" + '/' + productId);\r\n    }\r\n}\r\n\r\nexport default new ProductService()","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\AdminLoginService.js",["228"],"\r\nimport axios from 'axios';\r\n\r\n//const API_BASE_URL = \"http://localhost:8082/api/v1\";\r\n\r\nclass AdminLoginService {\r\n\r\n    login(adminUserName,adminPassword){\r\n        return axios.get(\"http://localhost:8082/api/v1/adminlogin\" +'/'+adminUserName+\"/\"+adminPassword);\r\n    }\r\n\r\n    register(admin){\r\n        return axios.post(\"http://localhost:8082/api/v1/admin\",admin);\r\n    }\r\n   \r\n\r\n   \r\n}\r\n\r\nexport default new  AdminLoginService()","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\HeroSection.js",["229","230"],"import React from 'react';\r\nimport '../App.css';\r\nimport { Button } from './Button';\r\nimport './HeroSection.css';\r\n\r\nfunction HeroSection() {\r\n  return (\r\n    <div className='hero-container'>\r\n      \r\n      <img src='images/purchase5.jpg'></img>\r\n      <h1>welcome</h1>\r\n      <p>What are you waiting for?</p>\r\n      <div className='hero-btns'>\r\n     \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeroSection;\r\n","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\Cards.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\Footer.js",["231","232","233","234","235","236","237"],"import React from 'react';\r\nimport './Footer.css';\r\nimport { Button } from './Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPhone, faEnvelope, faLock, faUndo, faUserPlus, faUser, faUsers,faAddressCard,faMapMarker } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className='footer-container'>\r\n      <section className='footer-subscription'>\r\n        <p className='footer-subscription-heading'>\r\n         \r\n        </p>\r\n        <p className='footer-subscription-text'>\r\n          \r\n        </p>\r\n      \r\n      </section>\r\n      <div class='footer-links'>\r\n        <div className='footer-link-wrapper'>\r\n          <div class='footer-link-items'>\r\n            <h2>About Us</h2>\r\n            <Link to='/'>Easy Supplier Farmer Communication</Link>\r\n            <Link to='/'> Boosts business communication </Link>\r\n            <Link to='/'>Complaint to respective dealers</Link>\r\n            \r\n            <Link to='/about'>Improve efficiency in farm production </Link>\r\n            \r\n          </div>\r\n          <div class='footer-link-items'>\r\n            <h2><Link to=\"/\"></Link>Contact Us</h2>\r\n            <Link to='/'><FontAwesomeIcon icon={faMapMarker} /> &nbsp;Address</Link>\r\n            <Link to='/'>4321 California St, San Francisco, CA 12345</Link>\r\n            <Link to='/'> <FontAwesomeIcon icon={faPhone} /> &nbsp; Phone</Link>\r\n            <Link to='/'> +1 123 456 1234</Link>\r\n            <Link to='/'> <FontAwesomeIcon icon={faEnvelope} />&nbsp; Email</Link>\r\n            <Link to='/'>info@company.com</Link>\r\n            \r\n          </div>\r\n        </div>\r\n       \r\n      </div>\r\n      <section class='social-media'>\r\n        <div class='social-media-wrap'>\r\n          <div class='footer-logo'>\r\n            <Link to='/' className='social-logo'>\r\n              Farmer Assistance\r\n              <i class='fab fa-typo3' />\r\n            </Link>\r\n          </div>\r\n          <small class='website-rights'>Farmer Assistance © 2021</small>\r\n          <div class='social-icons'>\r\n            <Link\r\n              class='social-icon-link facebook'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='Facebook'\r\n            >\r\n              <i class='fab fa-facebook-f' />\r\n            </Link>\r\n            <Link\r\n              class='social-icon-link instagram'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='Instagram'\r\n            >\r\n              <i class='fab fa-instagram' />\r\n            </Link>\r\n            <Link\r\n              class='social-icon-link youtube'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='Youtube'\r\n            >\r\n              <i class='fab fa-youtube' />\r\n            </Link>\r\n            <Link\r\n              class='social-icon-link twitter'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='Twitter'\r\n            >\r\n              <i class='fab fa-twitter' />\r\n            </Link>\r\n            <Link\r\n              class='social-icon-link twitter'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='LinkedIn'\r\n            >\r\n              <i class='fab fa-linkedin' />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\Button.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\PurchaseService.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\SupplierService.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\SupplierQuoteService.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\FarmerService.jsx",["238","239"],"\r\nimport axios from 'axios';\r\n\r\n//const API_BASE_URL = \"http://localhost:8082/api/v1\";\r\n\r\nclass FarmerService {\r\n\r\n    login(farmerUserName,farmerPassword){\r\n        return axios.get(\"http://localhost:8082/api/v1/farmerlogin\" +'/'+farmerUserName+\"/\"+farmerPassword);\r\n    }\r\n\r\n    register(farmer){\r\n        return axios.post(\"http://localhost:8082/api/v1/farmer\",farmer);\r\n    }\r\n    getFarmerById(farmerUserName)\r\n    {\r\n        return axios.get(\"http://localhost:8082/api/v1/getfarmerbyid\"+\"/\"+farmerUserName);\r\n    }\r\n\r\n   \r\n}\r\n\r\nexport default new  FarmerService()","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\CardItem.js",["240"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction CardItem(props) {\r\n  return (\r\n    <>\r\n      <li className='cards__item'>\r\n        <Link className='cards__item__link' to={props.path}>\r\n          <figure className='cards__item__pic-wrap' data-category={props.label}>\r\n            <img\r\n              className='cards__item__img'\r\n              alt='Travel Image'\r\n              src={props.src}\r\n            />\r\n          </figure>\r\n          <div className='cards__item__info'>\r\n            <h5 className='cards__item__text'>{props.text}</h5>\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardItem;\r\n",["241","242"],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\SoldProductService.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SoldProductQuote.jsx",["243"],"import React, { Component } from 'react'\r\nimport SupplierQuoteService from '../service/SupplierQuoteService';\r\nimport SoldProductService from '../service/SoldProductService';\r\nimport \"./ListQuote.css\";\r\n\r\n\r\nclass SoldProductQuote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            quote: []\r\n        }\r\n        this.addQuote = this.addQuote.bind(this);\r\n\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        SupplierQuoteService.getAllQuote().then((res) => {\r\n            this.setState({ quote: res.data });\r\n        });\r\n    }\r\n\r\n    addQuote() {\r\n        this.props.history.push('/soldProduct');\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n          \r\n              \r\n                <div className=\"body_wrap \">\r\n                    <div>\r\n                        <h2 className=\"box_title\">Product List</h2>\r\n                        <div className=\"row\">\r\n                            <button    className=\"btn btn-primary\" onClick={this.addQuote}> Sell product</button>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bordered\">\r\n\r\n                        <thead>\r\n                            <tr>\r\n                                <th> User Name</th>\r\n\r\n                                <th> Product Name</th>\r\n                                <th> Quantity</th>\r\n                                <th> quote Price</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.quote.map(\r\n                                    quote =>\r\n                                        <tr key={quote.quoteId}>\r\n                                            <td> {quote.userName} </td>\r\n                                            <td> {quote.productName} </td>\r\n                                            <td> {quote.quantity}</td>\r\n                                            <td> {quote.quotePrice} </td>\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n            </div>\r\n             </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SoldProductQuote\r\n",{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":11,"column":8,"nodeType":"250","messageId":"251","endLine":11,"endColumn":26},{"ruleId":"248","severity":1,"message":"252","line":15,"column":8,"nodeType":"250","messageId":"251","endLine":15,"endColumn":29},{"ruleId":"248","severity":1,"message":"253","line":39,"column":8,"nodeType":"250","messageId":"251","endLine":39,"endColumn":13},{"ruleId":"248","severity":1,"message":"254","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":14},{"ruleId":"248","severity":1,"message":"255","line":9,"column":10,"nodeType":"250","messageId":"251","endLine":9,"endColumn":17},{"ruleId":"248","severity":1,"message":"256","line":9,"column":19,"nodeType":"250","messageId":"251","endLine":9,"endColumn":29},{"ruleId":"248","severity":1,"message":"257","line":9,"column":39,"nodeType":"250","messageId":"251","endLine":9,"endColumn":45},{"ruleId":"248","severity":1,"message":"258","line":9,"column":67,"nodeType":"250","messageId":"251","endLine":9,"endColumn":74},{"ruleId":"248","severity":1,"message":"259","line":3,"column":8,"nodeType":"250","messageId":"251","endLine":3,"endColumn":28},{"ruleId":"260","severity":1,"message":"261","line":79,"column":8,"nodeType":"262","messageId":"263","endLine":79,"endColumn":51},{"ruleId":"248","severity":1,"message":"264","line":2,"column":10,"nodeType":"250","messageId":"251","endLine":2,"endColumn":16},{"ruleId":"265","severity":1,"message":"266","line":5,"column":10,"nodeType":"267","endLine":5,"endColumn":35},{"ruleId":"248","severity":1,"message":"257","line":6,"column":39,"nodeType":"250","messageId":"251","endLine":6,"endColumn":45},{"ruleId":"268","severity":1,"message":"269","line":158,"column":23,"nodeType":"270","endLine":158,"endColumn":56},{"ruleId":"268","severity":1,"message":"269","line":172,"column":111,"nodeType":"270","endLine":172,"endColumn":119},{"ruleId":"268","severity":1,"message":"269","line":173,"column":23,"nodeType":"270","endLine":173,"endColumn":55},{"ruleId":"268","severity":1,"message":"269","line":191,"column":23,"nodeType":"270","endLine":191,"endColumn":55},{"ruleId":"268","severity":1,"message":"269","line":207,"column":23,"nodeType":"270","endLine":207,"endColumn":55},{"ruleId":"268","severity":1,"message":"269","line":223,"column":23,"nodeType":"270","endLine":223,"endColumn":55},{"ruleId":"268","severity":1,"message":"269","line":238,"column":23,"nodeType":"270","endLine":238,"endColumn":55},{"ruleId":"248","severity":1,"message":"271","line":5,"column":9,"nodeType":"250","messageId":"251","endLine":5,"endColumn":12},{"ruleId":"248","severity":1,"message":"272","line":5,"column":14,"nodeType":"250","messageId":"251","endLine":5,"endColumn":17},{"ruleId":"248","severity":1,"message":"273","line":5,"column":19,"nodeType":"250","messageId":"251","endLine":5,"endColumn":23},{"ruleId":"248","severity":1,"message":"274","line":5,"column":25,"nodeType":"250","messageId":"251","endLine":5,"endColumn":29},{"ruleId":"248","severity":1,"message":"275","line":5,"column":31,"nodeType":"250","messageId":"251","endLine":5,"endColumn":41},{"ruleId":"248","severity":1,"message":"276","line":5,"column":43,"nodeType":"250","messageId":"251","endLine":5,"endColumn":54},{"ruleId":"248","severity":1,"message":"264","line":5,"column":56,"nodeType":"250","messageId":"251","endLine":5,"endColumn":62},{"ruleId":"248","severity":1,"message":"254","line":6,"column":10,"nodeType":"250","messageId":"251","endLine":6,"endColumn":14},{"ruleId":"248","severity":1,"message":"254","line":3,"column":11,"nodeType":"250","messageId":"251","endLine":3,"endColumn":15},{"ruleId":"248","severity":1,"message":"255","line":7,"column":10,"nodeType":"250","messageId":"251","endLine":7,"endColumn":17},{"ruleId":"248","severity":1,"message":"256","line":7,"column":19,"nodeType":"250","messageId":"251","endLine":7,"endColumn":29},{"ruleId":"248","severity":1,"message":"257","line":7,"column":39,"nodeType":"250","messageId":"251","endLine":7,"endColumn":45},{"ruleId":"248","severity":1,"message":"258","line":7,"column":67,"nodeType":"250","messageId":"251","endLine":7,"endColumn":74},{"ruleId":"248","severity":1,"message":"259","line":3,"column":8,"nodeType":"250","messageId":"251","endLine":3,"endColumn":28},{"ruleId":"248","severity":1,"message":"277","line":3,"column":7,"nodeType":"250","messageId":"251","endLine":3,"endColumn":27},{"ruleId":"278","severity":1,"message":"279","line":18,"column":71,"nodeType":"262","messageId":"280","endLine":18,"endColumn":72},{"ruleId":"278","severity":1,"message":"279","line":9,"column":68,"nodeType":"262","messageId":"280","endLine":9,"endColumn":69},{"ruleId":"248","severity":1,"message":"264","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":16},{"ruleId":"281","severity":1,"message":"282","line":10,"column":7,"nodeType":"267","endLine":10,"endColumn":39},{"ruleId":"248","severity":1,"message":"264","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":16},{"ruleId":"248","severity":1,"message":"283","line":6,"column":31,"nodeType":"250","messageId":"251","endLine":6,"endColumn":37},{"ruleId":"248","severity":1,"message":"257","line":6,"column":39,"nodeType":"250","messageId":"251","endLine":6,"endColumn":45},{"ruleId":"248","severity":1,"message":"284","line":6,"column":47,"nodeType":"250","messageId":"251","endLine":6,"endColumn":57},{"ruleId":"248","severity":1,"message":"285","line":6,"column":59,"nodeType":"250","messageId":"251","endLine":6,"endColumn":65},{"ruleId":"248","severity":1,"message":"258","line":6,"column":67,"nodeType":"250","messageId":"251","endLine":6,"endColumn":74},{"ruleId":"248","severity":1,"message":"286","line":6,"column":75,"nodeType":"250","messageId":"251","endLine":6,"endColumn":88},{"ruleId":"278","severity":1,"message":"279","line":9,"column":69,"nodeType":"262","messageId":"280","endLine":9,"endColumn":70},{"ruleId":"278","severity":1,"message":"279","line":17,"column":70,"nodeType":"262","messageId":"280","endLine":17,"endColumn":71},{"ruleId":"287","severity":1,"message":"288","line":10,"column":13,"nodeType":"267","endLine":14,"endColumn":15},{"ruleId":"244","replacedBy":"289"},{"ruleId":"246","replacedBy":"290"},{"ruleId":"248","severity":1,"message":"291","line":3,"column":8,"nodeType":"250","messageId":"251","endLine":3,"endColumn":26},"no-native-reassign",["292"],"no-negated-in-lhs",["293"],"no-unused-vars","'AdminViewComplaint' is defined but never used.","Identifier","unusedVar","'ListPurchaseComponent' is defined but never used.","'about' is defined but never used.","'Link' is defined but never used.","'faPhone' is defined but never used.","'faEnvelope' is defined but never used.","'faUndo' is defined but never used.","'faUsers' is defined but never used.","'SupplierQuoteService' is defined but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","'Button' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'Form' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'PRODUCT_API_BASE_URL' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'faLock' is defined but never used.","'faUserPlus' is defined but never used.","'faUser' is defined but never used.","'faAddressCard' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["292"],["293"],"'SoldProductService' is defined but never used.","no-global-assign","no-unsafe-negation"]