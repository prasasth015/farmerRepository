[{"D:\\react\\farmerRepository\\farmersystem1\\src\\index.js":"1","D:\\react\\farmerRepository\\farmersystem1\\src\\registerServiceWorker.js":"2","D:\\react\\farmerRepository\\farmersystem1\\src\\App.js":"3","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\Navbar.js":"4","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\pages\\Home.js":"5","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\pages\\Services.js":"6","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\pages\\SignUp.js":"7","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\pages\\Products.js":"8","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ProductComponent.jsx":"9","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\CreateSupplierComponent.jsx":"10","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\SupplierQuoteComponent.jsx":"11","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ListProductComponent.jsx":"12","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\UpdateQuoteComponent.jsx":"13","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\AdminLogin.jsx":"14","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ListQuoteComponent.jsx":"15","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ViewPurchaseComponent.jsx":"16","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\SupplierLogin.jsx":"17","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ViewQuoteComponent.jsx":"18","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ListPurchaseComponent.jsx":"19","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\FarmerLogin.jsx":"20","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\FarmerRegistration.jsx":"21","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\AddComplaint.jsx":"22","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ViewComplaint.jsx":"23","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ComplaintList.jsx":"24","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ListSoldProductComponent.jsx":"25","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ViewSoldProductComponent.jsx":"26","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\SoldProductComponent.jsx":"27","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\SupplierProduct.jsx":"28","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\SoldProductQuote.jsx":"29","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\Button.js":"30","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\Footer.js":"31","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\HeroSection.js":"32","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\Cards.js":"33","D:\\react\\farmerRepository\\farmersystem1\\src\\service\\PurchaseService.js":"34","D:\\react\\farmerRepository\\farmersystem1\\src\\service\\SupplierQuoteService.js":"35","D:\\react\\farmerRepository\\farmersystem1\\src\\service\\SupplierService.js":"36","D:\\react\\farmerRepository\\farmersystem1\\src\\service\\AdminLoginService.js":"37","D:\\react\\farmerRepository\\farmersystem1\\src\\service\\ProductService.js":"38","D:\\react\\farmerRepository\\farmersystem1\\src\\service\\SoldProductService.js":"39","D:\\react\\farmerRepository\\farmersystem1\\src\\service\\ComplaintService.js":"40","D:\\react\\farmerRepository\\farmersystem1\\src\\service\\FarmerService.jsx":"41","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\CardItem.js":"42","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\TempLogin.jsx":"43","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\FootComponent.jsx":"44"},{"size":358,"mtime":1611234040733,"results":"45","hashOfConfig":"46"},{"size":4711,"mtime":1611234040735,"results":"47","hashOfConfig":"46"},{"size":4442,"mtime":1611603490015,"results":"48","hashOfConfig":"46"},{"size":2807,"mtime":1611581258004,"results":"49","hashOfConfig":"46"},{"size":301,"mtime":1611493976428,"results":"50","hashOfConfig":"46"},{"size":138,"mtime":1611493976429,"results":"51","hashOfConfig":"46"},{"size":151,"mtime":1611493976429,"results":"52","hashOfConfig":"46"},{"size":146,"mtime":1611493976428,"results":"53","hashOfConfig":"46"},{"size":4547,"mtime":1611493976418,"results":"54","hashOfConfig":"46"},{"size":10523,"mtime":1611545730020,"results":"55","hashOfConfig":"46"},{"size":6358,"mtime":1611545798721,"results":"56","hashOfConfig":"46"},{"size":2792,"mtime":1611493976412,"results":"57","hashOfConfig":"46"},{"size":5020,"mtime":1611545730028,"results":"58","hashOfConfig":"46"},{"size":3877,"mtime":1611493976405,"results":"59","hashOfConfig":"46"},{"size":4215,"mtime":1611545730024,"results":"60","hashOfConfig":"46"},{"size":1934,"mtime":1611493976424,"results":"61","hashOfConfig":"46"},{"size":4982,"mtime":1611547069955,"results":"62","hashOfConfig":"46"},{"size":2388,"mtime":1611511048538,"results":"63","hashOfConfig":"46"},{"size":2927,"mtime":1611545730022,"results":"64","hashOfConfig":"46"},{"size":4748,"mtime":1611579198358,"results":"65","hashOfConfig":"46"},{"size":9065,"mtime":1611500747998,"results":"66","hashOfConfig":"46"},{"size":4792,"mtime":1611603648822,"results":"67","hashOfConfig":"46"},{"size":2400,"mtime":1611584647675,"results":"68","hashOfConfig":"46"},{"size":3812,"mtime":1611595496163,"results":"69","hashOfConfig":"46"},{"size":3892,"mtime":1611603392876,"results":"70","hashOfConfig":"46"},{"size":2052,"mtime":1611552193866,"results":"71","hashOfConfig":"46"},{"size":6549,"mtime":1611552193863,"results":"72","hashOfConfig":"46"},{"size":2133,"mtime":1611552193916,"results":"73","hashOfConfig":"46"},{"size":2381,"mtime":1611552193864,"results":"74","hashOfConfig":"46"},{"size":1019,"mtime":1611493976405,"results":"75","hashOfConfig":"46"},{"size":3404,"mtime":1611493976411,"results":"76","hashOfConfig":"46"},{"size":419,"mtime":1611493976412,"results":"77","hashOfConfig":"46"},{"size":1578,"mtime":1611493976407,"results":"78","hashOfConfig":"46"},{"size":390,"mtime":1611545730030,"results":"79","hashOfConfig":"46"},{"size":849,"mtime":1611545809118,"results":"80","hashOfConfig":"46"},{"size":417,"mtime":1611496475685,"results":"81","hashOfConfig":"46"},{"size":433,"mtime":1611493976431,"results":"82","hashOfConfig":"46"},{"size":526,"mtime":1611510792975,"results":"83","hashOfConfig":"46"},{"size":688,"mtime":1611552193868,"results":"84","hashOfConfig":"46"},{"size":590,"mtime":1611593491236,"results":"85","hashOfConfig":"46"},{"size":402,"mtime":1611407146298,"results":"86","hashOfConfig":"46"},{"size":670,"mtime":1611493976407,"results":"87","hashOfConfig":"46"},{"size":1727,"mtime":1611572300628,"results":"88","hashOfConfig":"46"},{"size":795,"mtime":1611581851705,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"a8kxtl",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"92"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react\\farmerRepository\\farmersystem1\\src\\index.js",[],["192","193"],"D:\\react\\farmerRepository\\farmersystem1\\src\\registerServiceWorker.js",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\App.js",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\Navbar.js",["194"],"import React, { useState, useEffect } from 'react';\r\nimport { Button } from './Button';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport './Button.css';\r\n\r\nfunction Navbar() {\r\n  const [click, setClick] = useState(false);\r\n  const [button, setButton] = useState(true);\r\n\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n  const logout =() =>{\r\n    localStorage.removeItem(\"token\")\r\n      window.location.href = '/';\r\n  }\r\n\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 960) {\r\n      setButton(false);\r\n    } else {\r\n      setButton(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n\r\n  window.addEventListener('resize', showButton);\r\n\r\n  return (\r\n    <>\r\n      <nav className='navbar'>\r\n        <div className='navbar-container'>\r\n          <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\r\n            <h3 style={{\"marginBottom\":\"26px\"}}>Farmer Assistance </h3>\r\n            <i class='fab fa-typo3' />\r\n          </Link>\r\n          <div className='menu-icon' onClick={handleClick}>\r\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n          </div>\r\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n            <li className='nav-item'>\r\n              <Link to='/' className='nav-links' onClick={closeMobileMenu}>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link\r\n                to='/supplierLogin'\r\n                className='nav-links'\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Supplier\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link\r\n                to='/farmerLogin'\r\n                className='nav-links'\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Farmer\r\n              </Link>\r\n            </li>\r\n\r\n            <li className='nav-item'>\r\n              <Link\r\n                to='/'\r\n                className='nav-links'\r\n                onClick={logout}\r\n              >\r\n              Logout\r\n              </Link>\r\n            </li>\r\n\r\n               \r\n            <li>\r\n              <Link\r\n                to='/sign-up'\r\n                className='nav-links-mobile'\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Sign Up\r\n              </Link>\r\n            </li>\r\n              \r\n            </ul>\r\n        <button style={{\"color\":\"white\",\"marginBottom\":\"21px\",\"width\":\"140px\",\"borderRadius\":\"10px\"}}><span  style={{\"color\":\"black\"}} ><Link to=\"/adminLogin\" style={{\"color\":\"black\"}}>Admin </Link></span></button>\r\n       \r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\pages\\Home.js",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\pages\\Services.js",["195"],"import React from 'react';\r\nimport '../../App.css';\r\n\r\nexport default function Services() {\r\n  return <h1 className='services'></h1>;\r\n}\r\n","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\pages\\SignUp.js",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\pages\\Products.js",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ProductComponent.jsx",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\CreateSupplierComponent.jsx",["196","197","198","199","200","201","202"],"\r\nimport React, { Component } from 'react';\r\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SupplierService from '../service/SupplierService';\r\nimport { faPhone, faEnvelope, faLock, faUserPlus, faUser, faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst addressRegex = RegExp(\r\n  /^[#.0-9a-zA-Z\\s,-]+$/\r\n);\r\n\r\nconst numberRegex = RegExp(\r\n  /^[0][1-9]\\d{9}$|^[1-9]\\d{9}$/\r\n);\r\n\r\nconst passwordRegex = RegExp(\r\n  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/\r\n);\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true;\r\n\r\n  // validate the form was filled out\r\n  Object.values(rest).forEach(val => {\r\n    val === null && (valid = false);\r\n  });\r\n\r\n  return valid;\r\n};\r\n\r\nclass CreateSupplierComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      supplierName: '',\r\n      supplierUserName: '',\r\n      supplierAddress: '',\r\n      supplierContactNumber: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      formErrors: {\r\n        supplierName: \"\",\r\n        supplierUserName: \"\",\r\n        supplierAddress: \"\",\r\n        supplierContactNumber: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n      }\r\n    };\r\n    this.saveSupplier = this.saveSupplier.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    // step 4\r\n    if (this.state.supplierUserName === '_add') {\r\n      return\r\n    }\r\n  }\r\n\r\n  saveSupplier = (e) => {\r\n    e.preventDefault();\r\n    let supplier = { supplierName: this.state.supplierName, supplierUserName: this.state.supplierUserName, supplierAddress: this.state.supplierAddress, supplierContactNumber: this.state.supplierContactNumber, password: this.state.password, confirmPassword: this.state.confirmPassword };\r\n    if (this.state.password !== this.state.confirmPassword)\r\n      alert(\"Given password and confirm password should be same \");\r\n    console.log('supplier => ' + JSON.stringify(supplier));\r\n\r\n    SupplierService.createSupplier(supplier).then(res => {\r\n      this.props.history.push('/supplierLogin');\r\n\r\n    });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (formValid(this.state)) {\r\n      console.log(`\r\n          --SUBMITTING--\r\n          Supplier Name: ${this.state.name}\r\n          User Name: ${this.state.supplierUserName}\r\n          Address: ${this.state.Address}\r\n          Contact Number: ${this.state.contactNumber}\r\n          password:${this.state.password}\r\n          confirmPassword:${this.state.confirmPassword}\r\n        `);\r\n    } else {\r\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"supplierName\":\r\n        formErrors.supplierName =\r\n          value.length < 5 ? \"minimum 5 characters required\" : \"\";\r\n        break;\r\n      case \"supplierUserName\":\r\n        formErrors.supplierUserName =\r\n          value.length < 5 ? \"minimum 5 characters required\" : \"\";\r\n        break;\r\n      case \"supplierAddress\":\r\n        formErrors.supplierAddress = addressRegex.test(value)\r\n          ? \"\"\r\n          : \"Invalid Address \";\r\n        break;\r\n      case \"supplierContactNumber\":\r\n        formErrors.supplierContactNumber = numberRegex.test(value)\r\n          ? \"\"\r\n          : \"invalid Contact Number\";\r\n        break;\r\n      case \"password\":\r\n        formErrors.password = passwordRegex.test(value)\r\n          ? \"\"\r\n          : \"Enter valid password (A-z),(!@#),(0-9)\";\r\n        break;\r\n      case \"confirmPassword\":\r\n        formErrors.confirmPassword = passwordRegex.test(value) ? \"\" : \"Enter valid password (A-z),(!@#),(0-9)\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n  };\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    return (\r\n      <Row className=\"justify-content-md-center\" style={{ \"margin-top\": \"60px\" }}>\r\n        <Col xs={5}>\r\n          <Card className={\"border border-dark bg-white-dark\"} >\r\n            <Card.Header style={{ \"text-align\": \"center\", \"fontSize\": \"20px\" }}>\r\n              <FontAwesomeIcon icon={faUsers} />SIGN-UP\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.supplierName.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"text\" name=\"supplierName\" value={this.state.supplierName} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark \"} placeholder=\"Enter Name\" />\r\n                  </InputGroup>\r\n                  {formErrors.supplierName.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.supplierName}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.supplierUserName.length > 0 ? \"error\" : null} required required autoComplete=\"off\" type=\"text\" name=\"supplierUserName\" value={this.state.supplierUserName} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter User Name\" />\r\n                  </InputGroup>\r\n                  {formErrors.supplierUserName.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.supplierUserName}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faPhone} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.supplierContactNumber.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"text\"\r\n                      name=\"supplierContactNumber\" value={this.state.supplierContactNumber} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter Contact Number\" />\r\n                  </InputGroup>\r\n                  {formErrors.supplierContactNumber.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.supplierContactNumber}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faLock} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.confirmPassword.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"password\"\r\n                      name=\"password\" value={this.state.password} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter password\" />\r\n                  </InputGroup>\r\n                  {formErrors.password.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.password}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faLock} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.confirmPassword.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\r\n                      value={this.state.confirmPassword} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter Confirm password\" />\r\n                  </InputGroup>\r\n                  {formErrors.confirmPassword.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.confirmPassword}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faEnvelope} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.supplierAddress.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"textarea\" name=\"supplierAddress\" value={this.state.supplierAddress} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter Address\" />\r\n                  </InputGroup>\r\n                  {formErrors.supplierAddress.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.supplierAddress}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n            </Card.Body>\r\n            <Card.Footer style={{ \"text-align\": \"center\" }}>\r\n              <Button size=\"sm\" type=\"button\" variant=\"success\" style={{ \"width\": \"80%\", \"padding\": \"10px\" }} onClick={this.saveSupplier} disabled={this.state.password.length === 0 || this.state.supplierName.length === 0 || this.state.supplierUserName.length === 0 || this.state.supplierAddress.length === 0 || this.state.supplierContactNumber.length === 0 || this.state.password.length === 0 || this.state.confirmPassword.length === 0}>\r\n                <FontAwesomeIcon icon={faUserPlus} /> SIGN-UP\r\n                            </Button>{' '}<br></br>\r\n              <small><Link to=\"/supplierLogin\">Already Have an Account? - Log-in</Link></small>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default CreateSupplierComponent","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\SupplierQuoteComponent.jsx",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ListProductComponent.jsx",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\UpdateQuoteComponent.jsx",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\AdminLogin.jsx",["203","204","205","206","207"],"import React, { Component } from 'react'\r\nimport AdminLoginService from '../service/AdminLoginService'\r\nimport { Link } from \"react-router-dom\";\r\n//import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport './AdminLogin.css';\r\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faPhone, faEnvelope, faLock, faUndo, faUserPlus, faUser, faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass AdminLogin extends Component {\r\n  constructor(props) {\r\n      super(props)\r\n\r\n      this.state = {\r\n          adminUserName:\"\",\r\n          adminPassword:\"\"\r\n               \r\n      }\r\n      this.verifyLogin=this.verifyLogin.bind(this);\r\n      \r\n  }\r\n  changeNameHandler=(event) => {\r\n    this.setState({adminUserName: event.target.value});\r\n\r\n  }\r\n  changeUserPasswordHandler=(event) => {\r\n    this.setState({adminPassword: event.target.value});\r\n  }\r\n  verifyLogin=(e) => {\r\n    e.preventDefault();\r\n      let admin = {adminUserName: this.state.adminUserName, adminPassword: this.state.adminPassword};\r\n      console.log('admin => ' + JSON.stringify(admin));\r\n\r\n        AdminLoginService.login(this.state.adminUserName,this.state.adminPassword);\r\n        AdminLoginService.login(this.state.adminUserName,this.state.adminPassword).then((res) => {\r\n        this.setState({admin:res.data});\r\n        console.log(res.data);\r\n        console.log('hello');\r\n        if(\r\n          res.data.adminUserName === this.state.adminUserName &&\r\n          res.data.adminPassword === this.state.adminPassword\r\n        ){\r\n          alert(\"Login Sucessful\");\r\n         \r\n          this.props.history.push(\"/productList\");\r\n        }\r\n        else{\r\n          alert(\"Wrong Credentials\");\r\n        }\r\n      })\r\n     \r\n    }\r\n\r\n    \r\n\r\n\r\n\r\nrender() {\r\n  return (\r\n    <Row className=\"justify-content-md-center\" style={{ \"margin-top\": \"60px\" }}>\r\n  <Col xs={5}>\r\n    <Card className={\"border border-dark bg-white-dark\"} >\r\n      <Card.Header style={{ \"text-align\": \"center\" ,\"fontSize\":\"20px\"}}>\r\n        <FontAwesomeIcon icon={faUser} />LOG-IN\r\n                  </Card.Header>\r\n      <Card.Body>\r\n        \r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col}>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl  required autoComplete=\"off\" type=\"text\" name=\"adminUserName\" value={this.state.adminUserName} onChange={this.changeNameHandler}\r\n                className={\"bg-white text-dark\"} placeholder=\"Enter User Name\" />\r\n            </InputGroup>\r\n            \r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col}>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faLock} /></InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl autoComplete=\"off\" type=\"password\"\r\n                name=\"password\" value={this.state.adminPassword} onChange={this.changeUserPasswordHandler}\r\n                className={\"bg-white text-dark\"} placeholder=\"Enter password\" />\r\n            </InputGroup>\r\n            \r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        \r\n        </Card.Body>\r\n            <Card.Footer style={{ \"text-align\": \"center\"}}>\r\n              <Button size=\"sm\" type=\"button\" variant=\"success\" style={{ \"width\":\"80%\",\"padding\":\"10px\"}} onClick={this.verifyLogin}>\r\n                <FontAwesomeIcon icon={faUserPlus} /> Log-In\r\n                            </Button>{' '}<br></br>\r\n                            \r\n            </Card.Footer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n\r\n   \r\n    \r\n         \r\n        \r\n  \r\n}\r\n}\r\nexport default AdminLogin;","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ListQuoteComponent.jsx",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ViewPurchaseComponent.jsx",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\SupplierLogin.jsx",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ViewQuoteComponent.jsx",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ListPurchaseComponent.jsx",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\FarmerLogin.jsx",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\FarmerRegistration.jsx",["208","209","210","211","212"],"import React, { Component } from 'react'\r\nimport FarmerService from '../service/FarmerService';\r\n\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faPhone, faEnvelope, faLock, faUserPlus, faUser, faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\n\r\nconst addressRegex = RegExp(\r\n  /^[#.0-9a-zA-Z\\s,-]+$/\r\n);\r\n\r\nconst numberRegex = RegExp(\r\n  /^[0][1-9]\\d{9}$|^[1-9]\\d{9}$/\r\n);\r\n\r\nconst passwordRegex = RegExp(\r\n  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/\r\n);\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true;\r\n\r\n  // validate form errors being empty\r\n  Object.values(formErrors).forEach(val => {\r\n    val.length > 0 && (valid = false);\r\n  });\r\n\r\n  // validate the form was filled out\r\n  Object.values(rest).forEach(val => {\r\n    val === null && (valid = false);\r\n  });\r\n\r\n  return valid;\r\n};\r\n\r\nclass FarmerRegistration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      farmerName: '',\r\n      //farmerUserName: this.props.match.params.farmerUserName,\r\n      farmerUserName:'',\r\n      farmerAddress: '',\r\n      farmerContactNo: '',\r\n      farmerPassword: '',\r\n      \r\n      formErrors: {\r\n        farmerName: \"\",\r\n        farmerUserName: \"\",\r\n        farmerAddress: \"\",\r\n        farmerContactNo: \"\",\r\n        farmerPassword: \"\"\r\n        \r\n      }\r\n    };\r\n\r\n   \r\n  \r\n    this.saveFarmer =this.saveFarmer.bind(this);\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    // step 4\r\n    if (this.state.farmerUserName === '_add') {\r\n      return\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  saveFarmer = (e) => {\r\n    e.preventDefault();\r\n    let farmer = { farmerName: this.state.farmerName, farmerUserName: this.state.farmerUserName, farmerAddress: this.state.farmerAddress, farmerContactNo: this.state.farmerContactNo, farmerPassword: this.state.farmerPassword };\r\n    console.log('farmer => ' + JSON.stringify(farmer));\r\n\r\n    FarmerService.register(farmer).then(res => {\r\n      this.props.history.push('/farmerLogin');\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (formValid(this.state)) {\r\n      console.log(`\r\n          --SUBMITTING--\r\n          farmer Name: ${this.state.name}\r\n          User Name: ${this.state.farmerUserName}\r\n          Address: ${this.state.Address}\r\n          Contact Number: ${this.state.contactNumber}\r\n          password:${this.state.password}\r\n          \r\n        `);\r\n    } else {\r\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"farmerName\":\r\n        formErrors.farmerName =\r\n          value.length < 5 ? \"minimum 5 characaters required\" : \"\";\r\n        break;\r\n      case \"farmerUserName\":\r\n        formErrors.farmerUserName =\r\n          value.length < 5 ? \"minimum 5 characaters required\" : \"\";\r\n        break;\r\n      case \"farmerAddress\":\r\n        formErrors.farmerAddress = addressRegex.test(value)\r\n          ? \"\"\r\n          : \"Invalid Address \";\r\n        break;\r\n      case \"farmerContactNo\":\r\n        formErrors.farmerContactNo = numberRegex.test(value)\r\n          ? \"\"\r\n          : \"invalid Contact Number\";\r\n        break;\r\n      case \"farmerPassword\":\r\n        formErrors.farmerPassword = passwordRegex.test(value)\r\n          ? \"\"\r\n          : \"Enter valid password\";\r\n        break;\r\n     \r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n  };\r\n\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n    return (\r\n      <Row className=\"justify-content-md-center\" style={{ \"margin-top\": \"60px\" }}>\r\n        <Col xs={5}>\r\n          <Card className={\"border border-dark bg-white-dark\"} >\r\n            <Card.Header style={{ \"text-align\": \"center\" ,\"fontSize\":\"20px\"}}>\r\n              <FontAwesomeIcon icon={faUsers} />SIGN-UP\r\n                        </Card.Header>\r\n            <Card.Body>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.farmerName.length > 0 ? \"error\" : null} autoComplete=\"off\" type=\"text\" name=\"farmerName\" value={this.state.farmerName} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark \"} placeholder=\"Enter Name\" />\r\n                  </InputGroup>\r\n                  {formErrors.farmerName.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.farmerName}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.farmerUserName.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"text\" name=\"farmerUserName\" value={this.state.farmerUserName} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter User Name\" />\r\n                  </InputGroup>\r\n                  {formErrors.farmerUserName.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.farmerUserName}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              \r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faPhone} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.farmerContactNo.length > 0 ? \"error\" : null} autoComplete=\"off\" type=\"contactNumber\"\r\n                      name=\"farmerContactNo\" value={this.state.farmerContactNo} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter Contact Number\" />\r\n                  </InputGroup>\r\n                  {formErrors.farmerContactNo.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.farmerContactNo}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faLock} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.farmerPassword.length > 0 ? \"error\" : null} autoComplete=\"off\" type=\"password\"\r\n                      name=\"farmerPassword\" value={this.state.farmerPassword} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter Password\" />\r\n                  </InputGroup>\r\n                  {formErrors.farmerPassword.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.farmerPassword}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faEnvelope} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.farmerAddress.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"textarea\" name=\"farmerAddress\" value={this.state.farmerAddress} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter Address\" />\r\n                  </InputGroup>\r\n                  {formErrors.farmerAddress.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.farmerAddress}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              \r\n            </Card.Body>\r\n            <Card.Footer style={{ \"text-align\": \"center\"}}>\r\n              <Button size=\"sm\" type=\"button\" variant=\"success\" style={{ \"width\":\"80%\",\"padding\":\"10px\"}} onClick={this.saveFarmer}>\r\n                <FontAwesomeIcon icon={faUserPlus} /> SIGN-UP\r\n                            </Button>{' '}<br></br>\r\n                            <small><Link to=\"/farmerLogin\">Already Have an Account? - Log-in</Link></small>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n\r\n     \r\n    \r\n  }\r\n}\r\n\r\n\r\n\r\nexport default FarmerRegistration\r\n","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\AddComplaint.jsx",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ViewComplaint.jsx",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ComplaintList.jsx",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ListSoldProductComponent.jsx",["213","214"],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\ViewSoldProductComponent.jsx",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\SoldProductComponent.jsx",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\SupplierProduct.jsx",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\SoldProductQuote.jsx",["215"],"import React, { Component } from 'react'\r\nimport SupplierQuoteService from '../service/SupplierQuoteService';\r\nimport SoldProductService from '../service/SoldProductService';\r\nimport \"./ListQuote.css\";\r\n\r\n\r\nclass SoldProductQuote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            quote: []\r\n        }\r\n        this.addQuote = this.addQuote.bind(this);\r\n\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        SupplierQuoteService.getAllQuote().then((res) => {\r\n            this.setState({ quote: res.data });\r\n        });\r\n    }\r\n\r\n    addQuote() {\r\n        this.props.history.push('/soldProduct');\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n          \r\n              \r\n                <div className=\"body_wrap \">\r\n                    <div>\r\n                        <h2 className=\"box_title\">Product List</h2>\r\n                        <div className=\"row\">\r\n                            <button    className=\"btn btn-primary\" onClick={this.addQuote}> Sell product</button>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bordered\">\r\n\r\n                        <thead>\r\n                            <tr>\r\n                                <th> User Name</th>\r\n\r\n                                <th> Product Name</th>\r\n                                <th> Quantity</th>\r\n                                <th> quote Price</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.quote.map(\r\n                                    quote =>\r\n                                        <tr key={quote.quoteId}>\r\n                                            <td> {quote.userName} </td>\r\n                                            <td> {quote.productName} </td>\r\n                                            <td> {quote.quantity}</td>\r\n                                            <td> {quote.quotePrice} </td>\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n\r\n            </div>\r\n             </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SoldProductQuote\r\n","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\Button.js",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\Footer.js",["216","217","218","219","220","221","222"],"import React from 'react';\r\nimport './Footer.css';\r\nimport { Button } from './Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPhone, faEnvelope, faLock, faUndo, faUserPlus, faUser, faUsers,faAddressCard,faMapMarker } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className='footer-container'>\r\n      <section className='footer-subscription'>\r\n        <p className='footer-subscription-heading'>\r\n         \r\n        </p>\r\n        <p className='footer-subscription-text'>\r\n          \r\n        </p>\r\n      \r\n      </section>\r\n      <div class='footer-links'>\r\n        <div className='footer-link-wrapper'>\r\n          <div class='footer-link-items'>\r\n            <h2>About Us</h2>\r\n            <Link to='/'>Easy Supplier Farmer Communication</Link>\r\n            <Link to='/'> Boosts business communication </Link>\r\n            <Link to='/'>Complaint to respective dealers</Link>\r\n            \r\n            <Link to='/about'>Improve efficiency in farm production </Link>\r\n            \r\n          </div>\r\n          <div class='footer-link-items'>\r\n            <h2><Link to=\"/\"></Link>Contact Us</h2>\r\n            <Link to='/'><FontAwesomeIcon icon={faMapMarker} /> &nbsp;Address</Link>\r\n            <Link to='/'>4321 California St, San Francisco, CA 12345</Link>\r\n            <Link to='/'> <FontAwesomeIcon icon={faPhone} /> &nbsp; Phone</Link>\r\n            <Link to='/'> +1 123 456 1234</Link>\r\n            <Link to='/'> <FontAwesomeIcon icon={faEnvelope} />&nbsp; Email</Link>\r\n            <Link to='/'>info@company.com</Link>\r\n            \r\n          </div>\r\n        </div>\r\n       \r\n      </div>\r\n      <section class='social-media'>\r\n        <div class='social-media-wrap'>\r\n          <div class='footer-logo'>\r\n            <Link to='/' className='social-logo'>\r\n              Farmer Assistance\r\n              <i class='fab fa-typo3' />\r\n            </Link>\r\n          </div>\r\n          <small class='website-rights'>Farmer Assistance © 2021</small>\r\n          <div class='social-icons'>\r\n            <Link\r\n              class='social-icon-link facebook'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='Facebook'\r\n            >\r\n              <i class='fab fa-facebook-f' />\r\n            </Link>\r\n            <Link\r\n              class='social-icon-link instagram'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='Instagram'\r\n            >\r\n              <i class='fab fa-instagram' />\r\n            </Link>\r\n            <Link\r\n              class='social-icon-link youtube'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='Youtube'\r\n            >\r\n              <i class='fab fa-youtube' />\r\n            </Link>\r\n            <Link\r\n              class='social-icon-link twitter'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='Twitter'\r\n            >\r\n              <i class='fab fa-twitter' />\r\n            </Link>\r\n            <Link\r\n              class='social-icon-link twitter'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='LinkedIn'\r\n            >\r\n              <i class='fab fa-linkedin' />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\HeroSection.js",["223","224"],"import React from 'react';\r\nimport '../App.css';\r\nimport { Button } from './Button';\r\nimport './HeroSection.css';\r\n\r\nfunction HeroSection() {\r\n  return (\r\n    <div className='hero-container'>\r\n      \r\n      <img src='images/purchase5.jpg'></img>\r\n      <h1>welcome</h1>\r\n      <p>What are you waiting for?</p>\r\n      <div className='hero-btns'>\r\n     \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeroSection;\r\n","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\Cards.js",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\service\\PurchaseService.js",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\service\\SupplierQuoteService.js",["225"],"import axios from 'axios';\r\n\r\nconst QUOTE_API_BASE_URL = \"http://localhost:8082/api/v1/addQuote\";\r\nconst PRODUCT_API_BASE_URL = \"http://localhost:8082/api/v1/addproduct\";\r\n\r\nclass SupplierQuoteService {\r\n\r\n    getAllQuote(){\r\n        return axios.get(QUOTE_API_BASE_URL);\r\n    }\r\n\r\n    insertQuote(supplierQuote){\r\n        return axios.post(QUOTE_API_BASE_URL, supplierQuote);\r\n    }\r\n\r\n    getQuoteById(quoteId){\r\n        return axios.get(QUOTE_API_BASE_URL + '/' + quoteId);\r\n    }\r\n\r\n    updatePrice(supplierQuote, quoteId){\r\n        return axios.put(QUOTE_API_BASE_URL + '/' + quoteId, supplierQuote);\r\n    }\r\n    // getAllProduct(){\r\n    //     return axios.get(PRODUCT_API_BASE_URL);\r\n    // }\r\n\r\n    deleteQuote(quoteId){\r\n        return axios.delete(QUOTE_API_BASE_URL + '/' + quoteId);\r\n    }\r\n}\r\n\r\nexport default new SupplierQuoteService()","D:\\react\\farmerRepository\\farmersystem1\\src\\service\\SupplierService.js",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\service\\AdminLoginService.js",["226"],"\r\nimport axios from 'axios';\r\n\r\n//const API_BASE_URL = \"http://localhost:8082/api/v1\";\r\n\r\nclass AdminLoginService {\r\n\r\n    login(adminUserName,adminPassword){\r\n        return axios.get(\"http://localhost:8082/api/v1/adminlogin\" +'/'+adminUserName+\"/\"+adminPassword);\r\n    }\r\n\r\n    register(admin){\r\n        return axios.post(\"http://localhost:8082/api/v1/admin\",admin);\r\n    }\r\n   \r\n\r\n   \r\n}\r\n\r\nexport default new  AdminLoginService()","D:\\react\\farmerRepository\\farmersystem1\\src\\service\\ProductService.js",["227","228"],"import axios from 'axios';\r\n\r\nconst PRODUCT_API_BASE_URL = \"http://localhost:8082/api/v1/addproduct\";\r\n\r\nclass ProductService {\r\n\r\n    getAllProduct(){\r\n        return axios.get(\"http://localhost:8082/api/v1/addproduct\");\r\n    }\r\n\r\n   \r\n\r\n    insertProduct(product){\r\n        return axios.post(\"http://localhost:8082/api/v1/addproduct\", product);\r\n    }\r\n\r\n    deleteProduct(productId){\r\n        return axios.delete(\"http://localhost:8082/api/v1/addproduct\" + '/' + productId);\r\n    }\r\n}\r\n\r\nexport default new ProductService()","D:\\react\\farmerRepository\\farmersystem1\\src\\service\\SoldProductService.js",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\service\\ComplaintService.js",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\service\\FarmerService.jsx",[],"D:\\react\\farmerRepository\\farmersystem1\\src\\components\\CardItem.js",["229"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction CardItem(props) {\r\n  return (\r\n    <>\r\n      <li className='cards__item'>\r\n        <Link className='cards__item__link' to={props.path}>\r\n          <figure className='cards__item__pic-wrap' data-category={props.label}>\r\n            <img\r\n              className='cards__item__img'\r\n              alt='Travel Image'\r\n              src={props.src}\r\n            />\r\n          </figure>\r\n          <div className='cards__item__info'>\r\n            <h5 className='cards__item__text'>{props.text}</h5>\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardItem;\r\n","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\TempLogin.jsx",["230"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst TempLogin = () => {\r\n  const [farmerUserName, setfarmerUserName] = useState(\"\");\r\n  const [farmerPassword, setfarmerPassword] = useState(\"\");\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    const loggedInUser = localStorage.getItem(\"user\");\r\n    if (loggedInUser) {\r\n      const foundUser = JSON.parse(loggedInUser);\r\n      setUser(foundUser);\r\n    }\r\n  }, []);\r\n\r\n  \r\n  // login the user\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const user = { farmerUserName, farmerPassword };\r\n    // send the username and password to the server\r\n    const response = await axios.get(\r\n      \"http://localhost:8082/api/v1/farmerlogin/\",\r\n      user\r\n    );\r\n    // set the state of the user\r\n    setUser(response.data);\r\n    // store the user in localStorage\r\n    localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n  };\r\n\r\n \r\n\r\n  // if there's no user, show the login form\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"username\">Username: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={farmerUserName}\r\n          placeholder=\"enter a username\"\r\n          onChange={({ target }) => setfarmerUserName(target.value)}\r\n        />\r\n        <div>\r\n          <label htmlFor=\"password\">password: </label>\r\n          <input\r\n            type=\"password\"\r\n            value={farmerPassword}\r\n            placeholder=\"enter a password\"\r\n            onChange={({ target }) => setfarmerPassword(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TempLogin;","D:\\react\\farmerRepository\\farmersystem1\\src\\components\\FootComponent.jsx",["231"],{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":2,"column":10,"nodeType":"238","messageId":"239","endLine":2,"endColumn":16},{"ruleId":"240","severity":1,"message":"241","line":5,"column":10,"nodeType":"242","endLine":5,"endColumn":35},{"ruleId":"243","severity":1,"message":"244","line":152,"column":23,"nodeType":"245","endLine":152,"endColumn":56},{"ruleId":"243","severity":1,"message":"244","line":166,"column":111,"nodeType":"245","endLine":166,"endColumn":119},{"ruleId":"243","severity":1,"message":"244","line":167,"column":23,"nodeType":"245","endLine":167,"endColumn":55},{"ruleId":"243","severity":1,"message":"244","line":183,"column":23,"nodeType":"245","endLine":183,"endColumn":55},{"ruleId":"243","severity":1,"message":"244","line":199,"column":23,"nodeType":"245","endLine":199,"endColumn":55},{"ruleId":"243","severity":1,"message":"244","line":215,"column":23,"nodeType":"245","endLine":215,"endColumn":55},{"ruleId":"243","severity":1,"message":"244","line":230,"column":23,"nodeType":"245","endLine":230,"endColumn":55},{"ruleId":"236","severity":1,"message":"246","line":3,"column":10,"nodeType":"238","messageId":"239","endLine":3,"endColumn":14},{"ruleId":"236","severity":1,"message":"247","line":9,"column":10,"nodeType":"238","messageId":"239","endLine":9,"endColumn":17},{"ruleId":"236","severity":1,"message":"248","line":9,"column":19,"nodeType":"238","messageId":"239","endLine":9,"endColumn":29},{"ruleId":"236","severity":1,"message":"249","line":9,"column":39,"nodeType":"238","messageId":"239","endLine":9,"endColumn":45},{"ruleId":"236","severity":1,"message":"250","line":9,"column":67,"nodeType":"238","messageId":"239","endLine":9,"endColumn":74},{"ruleId":"243","severity":1,"message":"244","line":168,"column":23,"nodeType":"245","endLine":168,"endColumn":56},{"ruleId":"243","severity":1,"message":"244","line":183,"column":23,"nodeType":"245","endLine":183,"endColumn":55},{"ruleId":"243","severity":1,"message":"244","line":201,"column":23,"nodeType":"245","endLine":201,"endColumn":55},{"ruleId":"243","severity":1,"message":"244","line":217,"column":23,"nodeType":"245","endLine":217,"endColumn":55},{"ruleId":"243","severity":1,"message":"244","line":231,"column":23,"nodeType":"245","endLine":231,"endColumn":55},{"ruleId":"236","severity":1,"message":"246","line":2,"column":10,"nodeType":"238","messageId":"239","endLine":2,"endColumn":14},{"ruleId":"236","severity":1,"message":"251","line":4,"column":8,"nodeType":"238","messageId":"239","endLine":4,"endColumn":28},{"ruleId":"236","severity":1,"message":"252","line":3,"column":8,"nodeType":"238","messageId":"239","endLine":3,"endColumn":26},{"ruleId":"236","severity":1,"message":"237","line":3,"column":10,"nodeType":"238","messageId":"239","endLine":3,"endColumn":16},{"ruleId":"236","severity":1,"message":"253","line":6,"column":31,"nodeType":"238","messageId":"239","endLine":6,"endColumn":37},{"ruleId":"236","severity":1,"message":"249","line":6,"column":39,"nodeType":"238","messageId":"239","endLine":6,"endColumn":45},{"ruleId":"236","severity":1,"message":"254","line":6,"column":47,"nodeType":"238","messageId":"239","endLine":6,"endColumn":57},{"ruleId":"236","severity":1,"message":"255","line":6,"column":59,"nodeType":"238","messageId":"239","endLine":6,"endColumn":65},{"ruleId":"236","severity":1,"message":"250","line":6,"column":67,"nodeType":"238","messageId":"239","endLine":6,"endColumn":74},{"ruleId":"236","severity":1,"message":"256","line":6,"column":75,"nodeType":"238","messageId":"239","endLine":6,"endColumn":88},{"ruleId":"236","severity":1,"message":"237","line":3,"column":10,"nodeType":"238","messageId":"239","endLine":3,"endColumn":16},{"ruleId":"257","severity":1,"message":"258","line":10,"column":7,"nodeType":"242","endLine":10,"endColumn":39},{"ruleId":"236","severity":1,"message":"259","line":4,"column":7,"nodeType":"238","messageId":"239","endLine":4,"endColumn":27},{"ruleId":"260","severity":1,"message":"261","line":9,"column":68,"nodeType":"262","messageId":"263","endLine":9,"endColumn":69},{"ruleId":"236","severity":1,"message":"259","line":3,"column":7,"nodeType":"238","messageId":"239","endLine":3,"endColumn":27},{"ruleId":"260","severity":1,"message":"261","line":18,"column":71,"nodeType":"262","messageId":"263","endLine":18,"endColumn":72},{"ruleId":"264","severity":1,"message":"265","line":10,"column":13,"nodeType":"242","endLine":14,"endColumn":15},{"ruleId":"236","severity":1,"message":"266","line":7,"column":10,"nodeType":"238","messageId":"239","endLine":7,"endColumn":14},{"ruleId":"236","severity":1,"message":"267","line":14,"column":15,"nodeType":"238","messageId":"239","endLine":14,"endColumn":22},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Link' is defined but never used.","'faPhone' is defined but never used.","'faEnvelope' is defined but never used.","'faUndo' is defined but never used.","'faUsers' is defined but never used.","'SupplierQuoteService' is defined but never used.","'SoldProductService' is defined but never used.","'faLock' is defined but never used.","'faUserPlus' is defined but never used.","'faUser' is defined but never used.","'faAddressCard' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'PRODUCT_API_BASE_URL' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'user' is assigned a value but never used.","'mystyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]