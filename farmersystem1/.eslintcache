[{"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\index.js":"1","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\registerServiceWorker.js":"2","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\App.js":"3","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\AdminLogin.jsx":"4","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ViewSoldProductComponent.jsx":"5","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListProductComponent.jsx":"6","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\AdminViewComplaint.jsx":"7","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListSoldProductComponent.jsx":"8","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\FarmerLogin.jsx":"9","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\FarmerRegistration.jsx":"10","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\AddComplaint.jsx":"11","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ComplaintList.jsx":"12","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ViewComplaint.jsx":"13","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\pages\\Home.js":"14","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\Navbar.js":"15","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\pages\\Products.js":"16","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\pages\\SignUp.js":"17","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\pages\\Services.js":"18","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ProductComponent.jsx":"19","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SoldProductComponent.jsx":"20","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\CreateSupplierComponent.jsx":"21","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListPurchaseComponent.jsx":"22","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SupplierQuoteComponent.jsx":"23","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListQuoteComponent.jsx":"24","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\UpdateQuoteComponent.jsx":"25","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ViewQuoteComponent.jsx":"26","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SupplierLogin.jsx":"27","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\about.jsx":"28","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SupplierProduct.jsx":"29","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\ProductService.js":"30","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\AdminLoginService.js":"31","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\HeroSection.js":"32","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\Cards.js":"33","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\Footer.js":"34","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\Button.js":"35","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\PurchaseService.js":"36","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\SupplierService.js":"37","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\SupplierQuoteService.js":"38","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\FarmerService.jsx":"39","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\CardItem.js":"40","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\SoldProductService.js":"41","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SoldProductQuote.jsx":"42"},{"size":347,"mtime":1611145714570,"results":"43","hashOfConfig":"44"},{"size":4595,"mtime":1611033885000,"results":"45","hashOfConfig":"44"},{"size":4212,"mtime":1611507598796,"results":"46","hashOfConfig":"44"},{"size":3877,"mtime":1611405340472,"results":"47","hashOfConfig":"44"},{"size":2052,"mtime":1611502826851,"results":"48","hashOfConfig":"44"},{"size":2792,"mtime":1611492736458,"results":"49","hashOfConfig":"44"},{"size":1375,"mtime":1611166695586,"results":"50","hashOfConfig":"44"},{"size":3345,"mtime":1611507645763,"results":"51","hashOfConfig":"44"},{"size":4047,"mtime":1611294840972,"results":"52","hashOfConfig":"44"},{"size":7657,"mtime":1611310163841,"results":"53","hashOfConfig":"44"},{"size":3025,"mtime":1611294840972,"results":"54","hashOfConfig":"44"},{"size":2769,"mtime":1611294840972,"results":"55","hashOfConfig":"44"},{"size":1367,"mtime":1611294840982,"results":"56","hashOfConfig":"44"},{"size":301,"mtime":1611493350506,"results":"57","hashOfConfig":"44"},{"size":2714,"mtime":1611493350499,"results":"58","hashOfConfig":"44"},{"size":146,"mtime":1611493350506,"results":"59","hashOfConfig":"44"},{"size":151,"mtime":1611493350507,"results":"60","hashOfConfig":"44"},{"size":138,"mtime":1611493350506,"results":"61","hashOfConfig":"44"},{"size":4547,"mtime":1611493350629,"results":"62","hashOfConfig":"44"},{"size":6549,"mtime":1611507926470,"results":"63","hashOfConfig":"44"},{"size":10715,"mtime":1611493350471,"results":"64","hashOfConfig":"44"},{"size":2408,"mtime":1611493350497,"results":"65","hashOfConfig":"44"},{"size":7045,"mtime":1611493350502,"results":"66","hashOfConfig":"44"},{"size":4061,"mtime":1611493350498,"results":"67","hashOfConfig":"44"},{"size":5130,"mtime":1611493350502,"results":"68","hashOfConfig":"44"},{"size":2466,"mtime":1611493350504,"results":"69","hashOfConfig":"44"},{"size":5219,"mtime":1611493350500,"results":"70","hashOfConfig":"44"},{"size":1345,"mtime":1611493350505,"results":"71","hashOfConfig":"44"},{"size":2159,"mtime":1611494153146,"results":"72","hashOfConfig":"44"},{"size":526,"mtime":1611493045339,"results":"73","hashOfConfig":"44"},{"size":433,"mtime":1611405932711,"results":"74","hashOfConfig":"44"},{"size":419,"mtime":1611493350495,"results":"75","hashOfConfig":"44"},{"size":1578,"mtime":1611493350470,"results":"76","hashOfConfig":"44"},{"size":3404,"mtime":1611493350472,"results":"77","hashOfConfig":"44"},{"size":1019,"mtime":1611493350468,"results":"78","hashOfConfig":"44"},{"size":400,"mtime":1611493350508,"results":"79","hashOfConfig":"44"},{"size":417,"mtime":1611493350509,"results":"80","hashOfConfig":"44"},{"size":840,"mtime":1611494502783,"results":"81","hashOfConfig":"44"},{"size":569,"mtime":1611339197604,"results":"82","hashOfConfig":"44"},{"size":670,"mtime":1611493350469,"results":"83","hashOfConfig":"44"},{"size":688,"mtime":1611500206967,"results":"84","hashOfConfig":"44"},{"size":2381,"mtime":1611507824913,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"kqflye",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\index.js",[],["185","186"],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\registerServiceWorker.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\App.js",["187","188","189"],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\AdminLogin.jsx",["190","191","192","193","194"],"import React, { Component } from 'react'\r\nimport AdminLoginService from '../service/AdminLoginService'\r\nimport { Link } from \"react-router-dom\";\r\n//import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport './AdminLogin.css';\r\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faPhone, faEnvelope, faLock, faUndo, faUserPlus, faUser, faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass AdminLogin extends Component {\r\n  constructor(props) {\r\n      super(props)\r\n\r\n      this.state = {\r\n          adminUserName:\"\",\r\n          adminPassword:\"\"\r\n               \r\n      }\r\n      this.verifyLogin=this.verifyLogin.bind(this);\r\n      \r\n  }\r\n  changeNameHandler=(event) => {\r\n    this.setState({adminUserName: event.target.value});\r\n\r\n  }\r\n  changeUserPasswordHandler=(event) => {\r\n    this.setState({adminPassword: event.target.value});\r\n  }\r\n  verifyLogin=(e) => {\r\n    e.preventDefault();\r\n      let admin = {adminUserName: this.state.adminUserName, adminPassword: this.state.adminPassword};\r\n      console.log('admin => ' + JSON.stringify(admin));\r\n\r\n        AdminLoginService.login(this.state.adminUserName,this.state.adminPassword);\r\n        AdminLoginService.login(this.state.adminUserName,this.state.adminPassword).then((res) => {\r\n        this.setState({admin:res.data});\r\n        console.log(res.data);\r\n        console.log('hello');\r\n        if(\r\n          res.data.adminUserName === this.state.adminUserName &&\r\n          res.data.adminPassword === this.state.adminPassword\r\n        ){\r\n          alert(\"Login Sucessful\");\r\n         \r\n          this.props.history.push(\"/productList\");\r\n        }\r\n        else{\r\n          alert(\"Wrong Credentials\");\r\n        }\r\n      })\r\n     \r\n    }\r\n\r\n    \r\n\r\n\r\n\r\nrender() {\r\n  return (\r\n    <Row className=\"justify-content-md-center\" style={{ \"margin-top\": \"60px\" }}>\r\n  <Col xs={5}>\r\n    <Card className={\"border border-dark bg-white-dark\"} >\r\n      <Card.Header style={{ \"text-align\": \"center\" ,\"fontSize\":\"20px\"}}>\r\n        <FontAwesomeIcon icon={faUser} />LOG-IN\r\n                  </Card.Header>\r\n      <Card.Body>\r\n        \r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col}>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl  required autoComplete=\"off\" type=\"text\" name=\"adminUserName\" value={this.state.adminUserName} onChange={this.changeNameHandler}\r\n                className={\"bg-white text-dark\"} placeholder=\"Enter User Name\" />\r\n            </InputGroup>\r\n            \r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col}>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faLock} /></InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl autoComplete=\"off\" type=\"password\"\r\n                name=\"password\" value={this.state.adminPassword} onChange={this.changeUserPasswordHandler}\r\n                className={\"bg-white text-dark\"} placeholder=\"Enter password\" />\r\n            </InputGroup>\r\n            \r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        \r\n        </Card.Body>\r\n            <Card.Footer style={{ \"text-align\": \"center\"}}>\r\n              <Button size=\"sm\" type=\"button\" variant=\"success\" style={{ \"width\":\"80%\",\"padding\":\"10px\"}} onClick={this.verifyLogin}>\r\n                <FontAwesomeIcon icon={faUserPlus} /> Log-In\r\n                            </Button>{' '}<br></br>\r\n                            \r\n            </Card.Footer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n\r\n   \r\n    \r\n         \r\n        \r\n  \r\n}\r\n}\r\nexport default AdminLogin;","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ViewSoldProductComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListProductComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\AdminViewComplaint.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListSoldProductComponent.jsx",["195"],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\FarmerLogin.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\FarmerRegistration.jsx",["196"],"import React, { Component } from 'react'\r\nimport FarmerService from '../service/FarmerService';\r\nimport \"./FarmerRegistration.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nconst addressRegex = RegExp(\r\n  /^[#.0-9a-zA-Z\\s,-]+$/\r\n);\r\n\r\nconst numberRegex = RegExp(\r\n  /^[0][1-9]\\d{9}$|^[1-9]\\d{9}$/\r\n);\r\n\r\nconst passwordRegex = RegExp(\r\n  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/\r\n);\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true;\r\n\r\n  // validate form errors being empty\r\n  Object.values(formErrors).forEach(val => {\r\n    val.length > 0 && (valid = false);\r\n  });\r\n\r\n  // validate the form was filled out\r\n  Object.values(rest).forEach(val => {\r\n    val === null && (valid = false);\r\n  });\r\n\r\n  return valid;\r\n};\r\n\r\nclass FarmerRegistration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      farmerName: '',\r\n      //farmerUserName: this.props.match.params.farmerUserName,\r\n      farmerUserName:'',\r\n      farmerAddress: '',\r\n      farmerContactNo: '',\r\n      farmerPassword: '',\r\n      \r\n      formErrors: {\r\n        farmerName: \"\",\r\n        farmerUserName: \"\",\r\n        farmerAddress: \"\",\r\n        farmerContactNo: \"\",\r\n        farmerPassword: \"\"\r\n        \r\n      }\r\n    };\r\n\r\n   \r\n  \r\n    this.saveFarmer =this.saveFarmer.bind(this);\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    // step 4\r\n    if (this.state.farmerUserName === '_add') {\r\n      return\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  saveFarmer = (e) => {\r\n    e.preventDefault();\r\n    let farmer = { farmerName: this.state.farmerName, farmerUserName: this.state.farmerUserName, farmerAddress: this.state.farmerAddress, farmerContactNo: this.state.farmerContactNo, farmerPassword: this.state.farmerPassword };\r\n    if(this.state.password !== this.state.password)\r\n    alert(\"Given password and confirm password should be same \");\r\n    console.log('farmer => ' + JSON.stringify(farmer));\r\n\r\n    FarmerService.register(farmer).then(res => {\r\n      this.props.history.push('/farmerLogin');\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (formValid(this.state)) {\r\n      console.log(`\r\n          --SUBMITTING--\r\n          farmer Name: ${this.state.name}\r\n          User Name: ${this.state.farmerUserName}\r\n          Address: ${this.state.Address}\r\n          Contact Number: ${this.state.contactNumber}\r\n          password:${this.state.password}\r\n          \r\n        `);\r\n    } else {\r\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"farmerName\":\r\n        formErrors.farmerName =\r\n          value.length < 5 ? \"minimum 5 characaters required\" : \"\";\r\n        break;\r\n      case \"farmerUserName\":\r\n        formErrors.farmerUserName =\r\n          value.length < 5 ? \"minimum 5 characaters required\" : \"\";\r\n        break;\r\n      case \"farmerAddress\":\r\n        formErrors.farmerAddress = addressRegex.test(value)\r\n          ? \"\"\r\n          : \"Invalid Address \";\r\n        break;\r\n      case \"farmerContactNo\":\r\n        formErrors.farmerContactNo = numberRegex.test(value)\r\n          ? \"\"\r\n          : \"invalid Contact Number\";\r\n        break;\r\n      case \"farmerPassword\":\r\n        formErrors.farmerPassword = passwordRegex.test(value)\r\n          ? \"\"\r\n          : \"Enter valid password\";\r\n        break;\r\n     \r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n  };\r\n\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n    return (\r\n\r\n      <div className=\"wrapper\">\r\n        <div className=\"form-wrapper\">\r\n          <div> <h3 className=\"title\">Farmer Registration</h3></div>\r\n          <form onSubmit={this.handleSubmit} noValidate>\r\n            <div className=\"name\">\r\n              <label htmlFor=\"firstName\" className=\"farmerLable\">Farmer Name</label>\r\n              <input\r\n                className={formErrors.farmerName.length > 0 ? \"error\" : null}\r\n                placeholder=\"Name\"\r\n                type=\"text\"\r\n                name=\"farmerName\"\r\n                value={this.state.farmerName}\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.farmerName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.farmerName}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"farmerUserName\">\r\n              <label htmlFor=\"farmerUserName\" className=\"farmerLable\">UserName</label>\r\n              <input\r\n                className={formErrors.farmerUserName.length > 0 ? \"error\" : null}\r\n                placeholder=\"UserName\"\r\n                type=\"text\"\r\n                name=\"farmerUserName\"\r\n                value={this.state.farmerUserName}\r\n                \r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.farmerUserName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.farmerUserName}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"Address\">\r\n              <label htmlFor=\"Address\" className=\"farmerLable\">Address</label>\r\n              <input\r\n                className={formErrors.farmerAddress.length > 0 ? \"error\" : null}\r\n                placeholder=\"Address\"\r\n                type=\"Address\"\r\n                name=\"farmerAddress\"\r\n                value={this.state.farmerAddress}\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.farmerAddress.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.farmerAddress}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"contactNumber\">\r\n              <label htmlFor=\"contactNumber\" className=\"farmerLable\">Contact Number</label>\r\n              <input\r\n                className={formErrors.farmerContactNo.length > 0 ? \"error\" : null}\r\n                placeholder=\"contactNumber\"\r\n                type=\"contactNumber\"\r\n                name=\"farmerContactNo\"\r\n                value={this.state.farmerContactNo}\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.farmerContactNo.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.farmerContactNo}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"password\">\r\n              <label htmlFor=\"password\" className=\"farmerLable\">Password</label>\r\n              <input\r\n                className={formErrors.farmerPassword.length > 0 ? \"error\" : null}\r\n                placeholder=\"farmerPassword\"\r\n                type=\"farmerPassword\"\r\n                name=\"farmerPassword\"\r\n                value={this.state.farmerPassword}\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.farmerPassword.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.farmerPassword}</span>\r\n              )}\r\n            </div>\r\n\r\n            \r\n\r\n            <div className=\"createAccount\">\r\n              <button className=\"button\" onClick={this.saveFarmer}>Create Account</button>\r\n              <small>Already Have an Account?  <Link to=\"/farmerLogin\" >Log In</Link></small>\r\n              \r\n\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default FarmerRegistration\r\n","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\AddComplaint.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ComplaintList.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ViewComplaint.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\pages\\Home.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\Navbar.js",["197"],"import React, { useState, useEffect } from 'react';\r\nimport { Button } from './Button';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.css';\r\nimport './Button.css';\r\n\r\nfunction Navbar() {\r\n  const [click, setClick] = useState(false);\r\n  const [button, setButton] = useState(true);\r\n\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n\r\n  const showButton = () => {\r\n    if (window.innerWidth <= 960) {\r\n      setButton(false);\r\n    } else {\r\n      setButton(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n\r\n  window.addEventListener('resize', showButton);\r\n\r\n  return (\r\n    <>\r\n      <nav className='navbar'>\r\n        <div className='navbar-container'>\r\n          <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\r\n            <h3 style={{\"marginBottom\":\"26px\"}}>Farmer Assistance </h3>\r\n            <i class='fab fa-typo3' />\r\n          </Link>\r\n          <div className='menu-icon' onClick={handleClick}>\r\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n          </div>\r\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n            <li className='nav-item'>\r\n              <Link to='/' className='nav-links' onClick={closeMobileMenu}>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link\r\n                to='/supplierLogin'\r\n                className='nav-links'\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Supplier\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link\r\n                to='/farmerLogin'\r\n                className='nav-links'\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Farmer\r\n              </Link>\r\n            </li>\r\n\r\n            <li className='nav-item'>\r\n              <Link\r\n                to='/'\r\n                className='nav-links'\r\n                onClick={closeMobileMenu}\r\n              >\r\n              Logout\r\n              </Link>\r\n            </li>\r\n\r\n               \r\n            <li>\r\n              <Link\r\n                to='/sign-up'\r\n                className='nav-links-mobile'\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Sign Up\r\n              </Link>\r\n            </li>\r\n              \r\n            </ul>\r\n        <button style={{\"color\":\"white\",\"marginBottom\":\"21px\",\"width\":\"140px\",\"borderRadius\":\"10px\"}}><span  style={{\"color\":\"black\"}} ><Link to=\"/adminLogin\" style={{\"color\":\"black\"}}>Admin </Link></span></button>\r\n       \r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\pages\\Products.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\pages\\SignUp.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\pages\\Services.js",["198"],"import React from 'react';\r\nimport '../../App.css';\r\n\r\nexport default function Services() {\r\n  return <h1 className='services'></h1>;\r\n}\r\n","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ProductComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SoldProductComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\CreateSupplierComponent.jsx",["199","200","201","202","203","204","205","206"],"\r\nimport React, { Component } from 'react';\r\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SupplierService from '../service/SupplierService';\r\nimport { faPhone, faEnvelope, faLock, faUndo, faUserPlus, faUser, faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst addressRegex = RegExp(\r\n  /^[#.0-9a-zA-Z\\s,-]+$/\r\n);\r\n\r\nconst numberRegex = RegExp(\r\n  /^[0][1-9]\\d{9}$|^[1-9]\\d{9}$/\r\n);\r\n\r\nconst passwordRegex = RegExp(\r\n  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/\r\n);\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true;\r\n\r\n  // validate form errors being empty\r\n  Object.values(formErrors).forEach(val => {\r\n    val.length > 0 && (valid = false);\r\n  });\r\n\r\n  // validate the form was filled out\r\n  Object.values(rest).forEach(val => {\r\n    val === null && (valid = false);\r\n  });\r\n\r\n  return valid;\r\n};\r\n\r\nclass CreateSupplierComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      supplierName: '',\r\n      supplierUserName:'',\r\n      supplierAddress: '',\r\n      supplierContactNumber: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      formErrors: {\r\n        supplierName: \"\",\r\n        supplierUserName: \"\",\r\n        supplierAddress: \"\",\r\n        supplierContactNumber: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n      }\r\n    };\r\n\r\n    this.saveSupplier = this.saveSupplier.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    // step 4\r\n    if (this.state.supplierUserName === '_add') {\r\n      return\r\n    }\r\n  }\r\n\r\n  saveSupplier = (e) => {\r\n    e.preventDefault();\r\n    let supplier = { supplierName: this.state.supplierName, supplierUserName: this.state.supplierUserName, supplierAddress: this.state.supplierAddress, supplierContactNumber: this.state.supplierContactNumber, password: this.state.password, confirmPassword: this.state.confirmPassword };\r\n    if (this.state.password !== this.state.confirmPassword)\r\n      alert(\"Given password and confirm password should be same \");\r\n    console.log('supplier => ' + JSON.stringify(supplier));\r\n\r\n    SupplierService.createSupplier(supplier).then(res => {\r\n      this.props.history.push('/supplierLogin');\r\n\r\n    });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (formValid(this.state)) {\r\n      console.log(`\r\n          --SUBMITTING--\r\n          Supplier Name: ${this.state.name}\r\n          User Name: ${this.state.supplierUserName}\r\n          Address: ${this.state.Address}\r\n          Contact Number: ${this.state.contactNumber}\r\n          password:${this.state.password}\r\n          confirmPassword:${this.state.confirmPassword}\r\n        `);\r\n    } else {\r\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"supplierName\":\r\n        formErrors.supplierName =\r\n          value.length < 5 ? \"minimum 5 characters required\" : \"\";\r\n        break;\r\n      case \"supplierUserName\":\r\n        formErrors.supplierUserName =\r\n          value.length < 5 ? \"minimum 5 characters required\" : \"\";\r\n        break;\r\n      case \"supplierAddress\":\r\n        formErrors.supplierAddress = addressRegex.test(value)\r\n          ? \"\"\r\n          : \"Invalid Address \";\r\n        break;\r\n      case \"supplierContactNumber\":\r\n        formErrors.supplierContactNumber = numberRegex.test(value)\r\n          ? \"\"\r\n          : \"invalid Contact Number\";\r\n        break;\r\n      case \"password\":\r\n        formErrors.password = passwordRegex.test(value)\r\n          ? \"\"\r\n          : \"Enter valid password (A-z),(!@#),(0-9)\";\r\n        break;\r\n      case \"confirmPassword\":\r\n        formErrors.confirmPassword = passwordRegex.test(value) ? \"\" : \"Enter valid password (A-z),(!@#),(0-9)\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n  };\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    return (\r\n      <Row className=\"justify-content-md-center\" style={{ \"margin-top\": \"60px\" }}>\r\n        <Col xs={5}>\r\n          <Card className={\"border border-dark bg-white-dark\"} >\r\n            <Card.Header style={{ \"text-align\": \"center\" ,\"fontSize\":\"20px\"}}>\r\n              <FontAwesomeIcon icon={faUsers} />SIGN-UP\r\n                        </Card.Header>\r\n            <Card.Body>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.supplierName.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"text\" name=\"supplierName\" value={this.state.supplierName} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark \"} placeholder=\"Enter Name\" />\r\n                  </InputGroup>\r\n                  {formErrors.supplierName.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.supplierName}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.supplierUserName.length > 0 ? \"error\" : null} required required autoComplete=\"off\" type=\"text\" name=\"supplierUserName\" value={this.state.supplierUserName} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter User Name\" />\r\n                  </InputGroup>\r\n                  {formErrors.supplierUserName.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.supplierUserName}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n           \r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faPhone} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.supplierContactNumber.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"contactNumber\"\r\n                      name=\"supplierContactNumber\" value={this.state.supplierContactNumber} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter Contact Number\" />\r\n                  </InputGroup>\r\n                  {formErrors.supplierContactNumber.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.supplierContactNumber}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faLock} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.confirmPassword.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"password\"\r\n                      name=\"password\" value={this.state.password} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter password\" />\r\n                  </InputGroup>\r\n                  {formErrors.password.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.password}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faLock} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.confirmPassword.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\r\n                      value={this.state.confirmPassword} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter Confirm password\" />\r\n                  </InputGroup>\r\n                  {formErrors.confirmPassword.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.confirmPassword}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n              \r\n                 <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faEnvelope} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.supplierAddress.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"textarea\" name=\"supplierAddress\" value={this.state.supplierAddress} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter Address\" />\r\n                  </InputGroup>\r\n                  {formErrors.supplierAddress.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.supplierAddress}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n            </Card.Body>\r\n            <Card.Footer style={{ \"text-align\": \"center\"}}>\r\n              <Button size=\"sm\" type=\"button\" variant=\"success\" style={{ \"width\":\"80%\",\"padding\":\"10px\"}} onClick={this.saveSupplier}  disabled={this.state.password.length === 0||this.state.supplierName.length === 0||this.state.supplierUserName.length === 0||this.state.supplierAddress.length === 0||this.state.supplierContactNumber.length === 0||this.state.password.length === 0||this.state.confirmPassword.length === 0}>\r\n                <FontAwesomeIcon icon={faUserPlus} /> SIGN-UP\r\n                            </Button>{' '}<br></br>\r\n                            <small><Link to=\"/supplierLogin\">Already Have an Account? - Log-in</Link></small>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default CreateSupplierComponent","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListPurchaseComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SupplierQuoteComponent.jsx",["207","208","209","210","211","212","213","214"],"import React, { Component } from 'react'\r\n import SupplierQuoteService from '../service/SupplierQuoteService';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./SupplierQuote.css\";\r\nimport {Row, Col, Card, Form, InputGroup, FormControl, Button} from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SupplierQuoteComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            // step 2\r\n            quoteId: this.props.match.params.quoteId,\r\n            userName: '',\r\n            productName: '',\r\n            quantity: '',\r\n            quotePrice: '',\r\n            product: ''\r\n        }\r\n        this.changeUserNameHandler = this.changeUserNameHandler.bind(this);\r\n        this.changeProductNameHandler = this.changeProductNameHandler.bind(this);\r\n        this.changeQuantityHandler = this.changeQuantityHandler.bind(this);\r\n        this.changeQuotePriceHandler = this.changeQuotePriceHandler.bind(this);\r\n        this.changeProductHandler = this.changeProductHandler.bind(this);\r\n        this.saveOrUpdateQuote = this.saveOrUpdateQuote.bind(this);\r\n    }\r\n\r\n    // step 3\r\n    componentDidMount() {\r\n\r\n        // step 4\r\n        if (this.state.quoteId === '_add') {\r\n            return\r\n        } else {\r\n            SupplierQuoteService.getQuoteById(this.state.quoteId).then((res) => {\r\n                let supplierQuote = res.data;\r\n                this.setState({\r\n                    userName: supplierQuote.userName,\r\n                    productName: supplierQuote.productName,\r\n                    quantity: supplierQuote.quantity,\r\n                    quotePrice: supplierQuote.quotePrice,\r\n                    // product:supplierQuote.product\r\n                });\r\n            });\r\n        }\r\n    }\r\n    saveOrUpdateQuote = (e) => {\r\n        e.preventDefault();\r\n        let supplierQuote = { userName: this.state.userName, productName: this.state.productName, quantity: this.state.quantity, quotePrice: this.state.quotePrice }; //product: this.state.product\r\n        console.log('supplierQuote => ' + JSON.stringify(supplierQuote));\r\n\r\n        // SupplierQuoteService.insertQuote(supplierQuote).then(res => {\r\n        // this.props.history.push('/addQuote');\r\n\r\n        // step 5\r\n        if (this.state.quoteId === '_add') {\r\n            SupplierQuoteService.insertQuote(supplierQuote).then(res => {\r\n                this.props.history.push('/supplierQuote');\r\n            });\r\n        }\r\n        else {\r\n            SupplierQuoteService.updatePrice(supplierQuote, this.state.quoteId).then(res => {\r\n                this.props.history.push('/supplierQuote');\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    changeUserNameHandler = (event) => {\r\n        this.setState({ userName: event.target.value });\r\n    }\r\n\r\n    changeProductNameHandler = (event) => {\r\n        this.setState({ productName: event.target.value });\r\n    }\r\n\r\n    changeQuantityHandler = (event) => {\r\n        this.setState({ quantity: event.target.value });\r\n    }\r\n\r\n    changeQuotePriceHandler = (event) => {\r\n        this.setState({ quotePrice: event.target.value });\r\n    }\r\n\r\n    changeProductHandler = (event) => {\r\n        this.setState({ product: event.target.value });\r\n    }\r\n\r\n    addQuote() {\r\n        this.props.history.push('/add-supplierQuote/_add');\r\n    }\r\n\r\n    \r\n    cancel() {\r\n        this.props.history.push('/supplierQuote');\r\n    }\r\n    \r\n    getTitle() {\r\n        if (this.state.quoteId === '_add') {\r\n            return <h3 className=\"quote\">Add Quote</h3>\r\n        } else {\r\n            return <h3 className=\"text-center\">Update </h3>\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n           \r\n            <br></br>\r\n               <div className = \"container\">\r\n               \r\n                    <div className = \"row\">\r\n                        <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                        {\r\n                                this.getTitle()\r\n                            }\r\n                            <div className = \"card-body\">\r\n                                <form >\r\n                                    <div className=\"userName\">\r\n                                        <label className=\"Label\"> User Name: </label>\r\n                                        <input placeholder=\"User Name\" name=\"userName\" className=\"form-control\"\r\n                                            value={this.state.userName} onChange={this.changeUserNameHandler} />\r\n                                    </div>\r\n                                    <div className=\"Product\">\r\n                                        <label className=\"Label\"> Product Name: </label>\r\n                                        <input placeholder=\"Product Name\" name=\"ProductName\" className=\"form-control\"\r\n                                            value={this.state.productName}  onChange={this.changeProductNameHandler} />\r\n                                    </div>\r\n                                    <div className=\"quantity\">\r\n                                        <label className=\"Label\">Quantity: </label>\r\n                                        <input placeholder=\"Quantity\" name=\"quantity\" className=\"form-control\"\r\n                                            value={this.state.quantity} onChange={this.changeQuantityHandler} />\r\n                                    </div>\r\n                                    <div className=\"quotePrice\">\r\n                                        <label className=\"Label\">Quote Price: </label>\r\n                                        <input placeholder=\"Quote Price\" name=\"quotePrice\" className=\"form-control\"\r\n                                            value={this.state.quotePrice}  onChange={this.changeQuotePriceHandler} />\r\n                                    </div>\r\n                                    {/* <div className = \"form-group\">\r\n                                            <label>Product: </label>\r\n                                            <input placeholder=\"Product\" name=\"product\" className=\"form-control\" \r\n                                                value={this.state.product} onChange={this.changeProductHandler}/>\r\n                                        </div> */}\r\n                                    <div className=\"button\">\r\n                                    <button className=\"btn btn-success\"  onClick={this.saveOrUpdateQuote} disabled={this.state.userName.length === 0||this.state.productName.length === 0||this.state.quantity.length === 0||this.state.quotePrice.length === 0}>Save</button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{ marginLeft: \"10px\" }}>Cancel</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SupplierQuoteComponent","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListQuoteComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\UpdateQuoteComponent.jsx",["215"],"import React, { Component } from 'react'\r\n import SupplierQuoteService from '../service/SupplierQuoteService';\r\n import { Link } from \"react-router-dom\";\r\n\r\nclass UpdateQuoteComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            // step 2\r\n            quoteId: this.props.match.params.quoteId,\r\n            userName: '',\r\n            productName: '',\r\n            quantity: '',\r\n            quotePrice: '',\r\n            product: ''\r\n        }\r\n        this.changeUserNameHandler = this.changeUserNameHandler.bind(this);\r\n        this.changeProductNameHandler = this.changeProductNameHandler.bind(this);\r\n        this.changeQuantityHandler = this.changeQuantityHandler.bind(this);\r\n        this.changeQuotePriceHandler = this.changeQuotePriceHandler.bind(this);\r\n        this.changeProductHandler = this.changeProductHandler.bind(this);\r\n        this.updatePrice = this.updatePrice.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        SupplierQuoteService.getQuoteById(this.state.quoteId).then((res) => {\r\n            let supplierQuote = res.data;\r\n            this.setState({\r\n                userName: supplierQuote.userName,\r\n                productName: supplierQuote.productName,\r\n                quantity: supplierQuote.quantity,\r\n                quotePrice: supplierQuote.quotePrice,\r\n\r\n            });\r\n        });\r\n    }\r\n\r\n    updatePrice = (e) => {\r\n        e.preventDefault();\r\n        let supplierQuote = { userName: this.state.userName, productName: this.state.productName, quantity: this.state.quantity, quotePrice: this.state.quotePrice };\r\n        console.log('supplierQuote => ' + JSON.stringify(supplierQuote));\r\n        console.log('quoteId => ' + JSON.stringify(this.state.quoteId));\r\n        SupplierQuoteService.updatePrice(supplierQuote, this.state.quoteId).then(res => {\r\n            this.props.history.push('/supplierQuote');\r\n        });\r\n    }\r\n\r\n\r\n    changeUserNameHandler = (event) => {\r\n        this.setState({ userName: event.target.value });\r\n    }\r\n\r\n    changeProductNameHandler = (event) => {\r\n        this.setState({ productName: event.target.value });\r\n    }\r\n\r\n    changeQuantityHandler = (event) => {\r\n        this.setState({ quantity: event.target.value });\r\n    }\r\n\r\n    changeQuotePriceHandler = (event) => {\r\n        this.setState({ quotePrice: event.target.value });\r\n    }\r\n\r\n    changeProductHandler = (event) => {\r\n        this.setState({ product: event.target.value });\r\n    }\r\n\r\n    cancel() {\r\n        this.props.history.push('/supplierQuote');\r\n    }\r\n\r\n  \r\n    render() {\r\n        return (\r\n            <div >\r\n           \r\n            <br></br>\r\n               <div className = \"container\">\r\n               \r\n                    <div className = \"row\">\r\n                        <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n            \r\n                            <div className = \"card-body\">\r\n                                <form >\r\n                                    <div className=\"form-group\">\r\n                                        <label> User Name: </label>\r\n                                        <input placeholder=\"User Name\" name=\"userName\" className=\"form-control\"\r\n                                            value={this.state.userName} onChange={this.changeUserNameHandler} />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label> Product Name: </label>\r\n                                        <input placeholder=\"Product Name\" name=\"ProductName\" className=\"form-control\"\r\n                                            value={this.state.productName} onChange={this.changeProductNameHandler} />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Quantity: </label>\r\n                                        <input placeholder=\"Quantity\" name=\"quantity\" className=\"form-control\"\r\n                                            value={this.state.quantity} onChange={this.changeQuantityHandler} />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label>Quote Price: </label>\r\n                                        <input placeholder=\"Quote Price\" name=\"quotePrice\" className=\"form-control\"\r\n                                            value={this.state.quotePrice} onChange={this.changeQuotePriceHandler} />\r\n                                    </div>\r\n\r\n                                    <button className=\"btn btn-success\" onClick={this.updatePrice}> Save</button>\r\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{ marginLeft: \"10px\" }}>Cancel</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateQuoteComponent\r\n","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ViewQuoteComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SupplierLogin.jsx",["216","217","218","219"],"import React, { Component } from 'react'\r\n// import SupplierService from '../service/SupplierService'\r\nimport { Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SupplierService from '../service/SupplierService';\r\nimport { faPhone, faEnvelope, faLock, faUndo, faUserPlus, faUser, faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Row, Col, Card, Form, InputGroup, FormControl, Button} from 'react-bootstrap';\r\n\r\n\r\nconst passwordRegex = RegExp(\r\n  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/\r\n);\r\n\r\nclass SupplierLogin extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      supplierUserName: \"\",\r\n      password: \"\"\r\n\r\n    }\r\n    //this.quoteList = this.quoteList.bind(this);\r\n  }\r\n\r\n  changeSupplierUserNameHandler = (event) => {\r\n    this.setState({ supplierUserName: event.target.value });\r\n\r\n}\r\nchangePasswordHandler = (event) => {\r\n    this.setState({ password: event.target.value });\r\n}\r\n\r\n// quoteList() {\r\n//   this.props.history.push('/supplierQuote');\r\n// }\r\n\r\nhandleChange = e => {\r\n  e.preventDefault();\r\n  const { name, value } = e.target;\r\n  let formErrors = { ...this.state.formErrors };\r\n\r\n  switch (name) {\r\n   \r\n    case \"supplierUserName\":\r\n      formErrors.supplierUserName =\r\n        value.length < 5 ? \"minimum 5 characters required\" : \"\";\r\n      break;\r\n \r\n    case \"password\":\r\n      formErrors.password = passwordRegex.test(value)\r\n        ? \"\"\r\n        : \"Enter valid password\";\r\n      break;\r\n   \r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n};\r\n\r\n\r\nverifyLogin = (e) => {\r\n  e.preventDefault();\r\n  let supplier = { supplierUserName: this.state.supplierUserName, password: this.state.password };\r\n  console.log('supplier => ' + JSON.stringify(supplier));\r\n\r\n  //FarmerService.getFarmerById(this.state.farmerUserName);\r\n  //FarmerService.getFarmerById(this.state.farmerUserName).then((res) => {\r\n  SupplierService.supplierLogin(this.state.supplierUserName, this.state.password);\r\n  SupplierService.supplierLogin(this.state.supplierUserName, this.state.password).then((res) => {\r\n      this.setState({ supplier: res.data });\r\n      console.log('hello');\r\n      console.log(res.data);\r\n      if (\r\n          res.data.supplierUserName === this.state.supplierUserName &&\r\n          res.data.password === this.state.password){\r\n          alert(\"Login Successful\");\r\n\r\n          this.props.history.push(\"supplierQuote\");\r\n      }\r\n\r\n      else {\r\n          alert(\"Enter valid User name and password\");\r\n      }\r\n  })\r\n\r\n}\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Row className=\"justify-content-md-center\" style={{ \"margin-top\": \"100px\" }}>\r\n      <Col xs={5}>\r\n        <Card className={\"border border-dark bg-white-dark\"} >\r\n          <Card.Header style={{ \"text-align\": \"center\", \"fontSize\": \"20px\" }}>\r\n            <FontAwesomeIcon icon={faUser} /> LOG-IN\r\n                </Card.Header>\r\n          <Card.Body>\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl  required autoComplete=\"off\" type=\"text\" name=\"supplierUserName\" value={this.state.supplierUserName} onChange={this.handleChange}\r\n                    className={\"bg-white text-dark\"} placeholder=\"Enter User Name\" />\r\n                </InputGroup>\r\n                {/* {formErrors.supplierUserName.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.supplierUserName}</span>\r\n                )} */}\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col}>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text><FontAwesomeIcon icon={faLock} /></InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl  autoComplete=\"off\" type=\"password\"\r\n                    name=\"password\" value={this.state.password} onChange={this.handleChange}\r\n                    className={\"bg-white text-dark\"} placeholder=\"Enter password\" />\r\n                </InputGroup>\r\n                {/* {formErrors.password.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.password}</span>\r\n                )} */}\r\n              </Form.Group>\r\n            </Form.Row>\r\n          </Card.Body>\r\n          <Card.Footer style={{ \"text-align\": \"center\" }}>\r\n            <Button size=\"sm\" type=\"button\" variant=\"success\" style={{ \"width\": \"80%\", \"padding\": \"10px\" }} onClick={this.verifyLogin} disabled={this.state.supplierUserName.length === 0|| this.state.password.length === 0}>\r\n              <FontAwesomeIcon icon={faUserPlus} /> LOG-IN\r\n                          </Button>{' '}<br></br>\r\n            <small><Link to=\"/add-supplier/:supplierUserName\">New User? - Sign-Up</Link></small>\r\n          </Card.Footer>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    );\r\n  }\r\n}\r\nexport default SupplierLogin;","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\about.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SupplierProduct.jsx",["220"],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\ProductService.js",["221","222"],"import axios from 'axios';\r\n\r\nconst PRODUCT_API_BASE_URL = \"http://localhost:8082/api/v1/addproduct\";\r\n\r\nclass ProductService {\r\n\r\n    getAllProduct(){\r\n        return axios.get(\"http://localhost:8082/api/v1/addproduct\");\r\n    }\r\n\r\n   \r\n\r\n    insertProduct(product){\r\n        return axios.post(\"http://localhost:8082/api/v1/addproduct\", product);\r\n    }\r\n\r\n    deleteProduct(productId){\r\n        return axios.delete(\"http://localhost:8082/api/v1/addproduct\" + '/' + productId);\r\n    }\r\n}\r\n\r\nexport default new ProductService()","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\AdminLoginService.js",["223"],"\r\nimport axios from 'axios';\r\n\r\n//const API_BASE_URL = \"http://localhost:8082/api/v1\";\r\n\r\nclass AdminLoginService {\r\n\r\n    login(adminUserName,adminPassword){\r\n        return axios.get(\"http://localhost:8082/api/v1/adminlogin\" +'/'+adminUserName+\"/\"+adminPassword);\r\n    }\r\n\r\n    register(admin){\r\n        return axios.post(\"http://localhost:8082/api/v1/admin\",admin);\r\n    }\r\n   \r\n\r\n   \r\n}\r\n\r\nexport default new  AdminLoginService()","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\HeroSection.js",["224","225"],"import React from 'react';\r\nimport '../App.css';\r\nimport { Button } from './Button';\r\nimport './HeroSection.css';\r\n\r\nfunction HeroSection() {\r\n  return (\r\n    <div className='hero-container'>\r\n      \r\n      <img src='images/purchase5.jpg'></img>\r\n      <h1>welcome</h1>\r\n      <p>What are you waiting for?</p>\r\n      <div className='hero-btns'>\r\n     \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeroSection;\r\n","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\Cards.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\Footer.js",["226","227","228","229","230","231","232"],"import React from 'react';\r\nimport './Footer.css';\r\nimport { Button } from './Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPhone, faEnvelope, faLock, faUndo, faUserPlus, faUser, faUsers,faAddressCard,faMapMarker } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className='footer-container'>\r\n      <section className='footer-subscription'>\r\n        <p className='footer-subscription-heading'>\r\n         \r\n        </p>\r\n        <p className='footer-subscription-text'>\r\n          \r\n        </p>\r\n      \r\n      </section>\r\n      <div class='footer-links'>\r\n        <div className='footer-link-wrapper'>\r\n          <div class='footer-link-items'>\r\n            <h2>About Us</h2>\r\n            <Link to='/'>Easy Supplier Farmer Communication</Link>\r\n            <Link to='/'> Boosts business communication </Link>\r\n            <Link to='/'>Complaint to respective dealers</Link>\r\n            \r\n            <Link to='/about'>Improve efficiency in farm production </Link>\r\n            \r\n          </div>\r\n          <div class='footer-link-items'>\r\n            <h2><Link to=\"/\"></Link>Contact Us</h2>\r\n            <Link to='/'><FontAwesomeIcon icon={faMapMarker} /> &nbsp;Address</Link>\r\n            <Link to='/'>4321 California St, San Francisco, CA 12345</Link>\r\n            <Link to='/'> <FontAwesomeIcon icon={faPhone} /> &nbsp; Phone</Link>\r\n            <Link to='/'> +1 123 456 1234</Link>\r\n            <Link to='/'> <FontAwesomeIcon icon={faEnvelope} />&nbsp; Email</Link>\r\n            <Link to='/'>info@company.com</Link>\r\n            \r\n          </div>\r\n        </div>\r\n       \r\n      </div>\r\n      <section class='social-media'>\r\n        <div class='social-media-wrap'>\r\n          <div class='footer-logo'>\r\n            <Link to='/' className='social-logo'>\r\n              Farmer Assistance\r\n              <i class='fab fa-typo3' />\r\n            </Link>\r\n          </div>\r\n          <small class='website-rights'>Farmer Assistance © 2021</small>\r\n          <div class='social-icons'>\r\n            <Link\r\n              class='social-icon-link facebook'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='Facebook'\r\n            >\r\n              <i class='fab fa-facebook-f' />\r\n            </Link>\r\n            <Link\r\n              class='social-icon-link instagram'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='Instagram'\r\n            >\r\n              <i class='fab fa-instagram' />\r\n            </Link>\r\n            <Link\r\n              class='social-icon-link youtube'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='Youtube'\r\n            >\r\n              <i class='fab fa-youtube' />\r\n            </Link>\r\n            <Link\r\n              class='social-icon-link twitter'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='Twitter'\r\n            >\r\n              <i class='fab fa-twitter' />\r\n            </Link>\r\n            <Link\r\n              class='social-icon-link twitter'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='LinkedIn'\r\n            >\r\n              <i class='fab fa-linkedin' />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\Button.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\PurchaseService.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\SupplierService.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\SupplierQuoteService.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\FarmerService.jsx",["233","234"],"\r\nimport axios from 'axios';\r\n\r\n//const API_BASE_URL = \"http://localhost:8082/api/v1\";\r\n\r\nclass FarmerService {\r\n\r\n    login(farmerUserName,farmerPassword){\r\n        return axios.get(\"http://localhost:8082/api/v1/farmerlogin\" +'/'+farmerUserName+\"/\"+farmerPassword);\r\n    }\r\n\r\n    register(farmer){\r\n        return axios.post(\"http://localhost:8082/api/v1/farmer\",farmer);\r\n    }\r\n    getFarmerById(farmerUserName)\r\n    {\r\n        return axios.get(\"http://localhost:8082/api/v1/getfarmerbyid\"+\"/\"+farmerUserName);\r\n    }\r\n\r\n   \r\n}\r\n\r\nexport default new  FarmerService()","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\CardItem.js",["235"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction CardItem(props) {\r\n  return (\r\n    <>\r\n      <li className='cards__item'>\r\n        <Link className='cards__item__link' to={props.path}>\r\n          <figure className='cards__item__pic-wrap' data-category={props.label}>\r\n            <img\r\n              className='cards__item__img'\r\n              alt='Travel Image'\r\n              src={props.src}\r\n            />\r\n          </figure>\r\n          <div className='cards__item__info'>\r\n            <h5 className='cards__item__text'>{props.text}</h5>\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardItem;\r\n","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\SoldProductService.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SoldProductQuote.jsx",["236"],{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":11,"column":8,"nodeType":"243","messageId":"244","endLine":11,"endColumn":26},{"ruleId":"241","severity":1,"message":"245","line":15,"column":8,"nodeType":"243","messageId":"244","endLine":15,"endColumn":29},{"ruleId":"241","severity":1,"message":"246","line":39,"column":8,"nodeType":"243","messageId":"244","endLine":39,"endColumn":13},{"ruleId":"241","severity":1,"message":"247","line":3,"column":10,"nodeType":"243","messageId":"244","endLine":3,"endColumn":14},{"ruleId":"241","severity":1,"message":"248","line":9,"column":10,"nodeType":"243","messageId":"244","endLine":9,"endColumn":17},{"ruleId":"241","severity":1,"message":"249","line":9,"column":19,"nodeType":"243","messageId":"244","endLine":9,"endColumn":29},{"ruleId":"241","severity":1,"message":"250","line":9,"column":39,"nodeType":"243","messageId":"244","endLine":9,"endColumn":45},{"ruleId":"241","severity":1,"message":"251","line":9,"column":67,"nodeType":"243","messageId":"244","endLine":9,"endColumn":74},{"ruleId":"241","severity":1,"message":"252","line":3,"column":8,"nodeType":"243","messageId":"244","endLine":3,"endColumn":28},{"ruleId":"253","severity":1,"message":"254","line":79,"column":8,"nodeType":"255","messageId":"256","endLine":79,"endColumn":51},{"ruleId":"241","severity":1,"message":"257","line":2,"column":10,"nodeType":"243","messageId":"244","endLine":2,"endColumn":16},{"ruleId":"258","severity":1,"message":"259","line":5,"column":10,"nodeType":"260","endLine":5,"endColumn":35},{"ruleId":"241","severity":1,"message":"250","line":6,"column":39,"nodeType":"243","messageId":"244","endLine":6,"endColumn":45},{"ruleId":"261","severity":1,"message":"262","line":158,"column":23,"nodeType":"263","endLine":158,"endColumn":56},{"ruleId":"261","severity":1,"message":"262","line":172,"column":111,"nodeType":"263","endLine":172,"endColumn":119},{"ruleId":"261","severity":1,"message":"262","line":173,"column":23,"nodeType":"263","endLine":173,"endColumn":55},{"ruleId":"261","severity":1,"message":"262","line":191,"column":23,"nodeType":"263","endLine":191,"endColumn":55},{"ruleId":"261","severity":1,"message":"262","line":207,"column":23,"nodeType":"263","endLine":207,"endColumn":55},{"ruleId":"261","severity":1,"message":"262","line":223,"column":23,"nodeType":"263","endLine":223,"endColumn":55},{"ruleId":"261","severity":1,"message":"262","line":238,"column":23,"nodeType":"263","endLine":238,"endColumn":55},{"ruleId":"241","severity":1,"message":"264","line":5,"column":9,"nodeType":"243","messageId":"244","endLine":5,"endColumn":12},{"ruleId":"241","severity":1,"message":"265","line":5,"column":14,"nodeType":"243","messageId":"244","endLine":5,"endColumn":17},{"ruleId":"241","severity":1,"message":"266","line":5,"column":19,"nodeType":"243","messageId":"244","endLine":5,"endColumn":23},{"ruleId":"241","severity":1,"message":"267","line":5,"column":25,"nodeType":"243","messageId":"244","endLine":5,"endColumn":29},{"ruleId":"241","severity":1,"message":"268","line":5,"column":31,"nodeType":"243","messageId":"244","endLine":5,"endColumn":41},{"ruleId":"241","severity":1,"message":"269","line":5,"column":43,"nodeType":"243","messageId":"244","endLine":5,"endColumn":54},{"ruleId":"241","severity":1,"message":"257","line":5,"column":56,"nodeType":"243","messageId":"244","endLine":5,"endColumn":62},{"ruleId":"241","severity":1,"message":"247","line":6,"column":10,"nodeType":"243","messageId":"244","endLine":6,"endColumn":14},{"ruleId":"241","severity":1,"message":"247","line":3,"column":11,"nodeType":"243","messageId":"244","endLine":3,"endColumn":15},{"ruleId":"241","severity":1,"message":"248","line":7,"column":10,"nodeType":"243","messageId":"244","endLine":7,"endColumn":17},{"ruleId":"241","severity":1,"message":"249","line":7,"column":19,"nodeType":"243","messageId":"244","endLine":7,"endColumn":29},{"ruleId":"241","severity":1,"message":"250","line":7,"column":39,"nodeType":"243","messageId":"244","endLine":7,"endColumn":45},{"ruleId":"241","severity":1,"message":"251","line":7,"column":67,"nodeType":"243","messageId":"244","endLine":7,"endColumn":74},{"ruleId":"241","severity":1,"message":"252","line":3,"column":8,"nodeType":"243","messageId":"244","endLine":3,"endColumn":28},{"ruleId":"241","severity":1,"message":"270","line":3,"column":7,"nodeType":"243","messageId":"244","endLine":3,"endColumn":27},{"ruleId":"271","severity":1,"message":"272","line":18,"column":71,"nodeType":"255","messageId":"273","endLine":18,"endColumn":72},{"ruleId":"271","severity":1,"message":"272","line":9,"column":68,"nodeType":"255","messageId":"273","endLine":9,"endColumn":69},{"ruleId":"241","severity":1,"message":"257","line":3,"column":10,"nodeType":"243","messageId":"244","endLine":3,"endColumn":16},{"ruleId":"274","severity":1,"message":"275","line":10,"column":7,"nodeType":"260","endLine":10,"endColumn":39},{"ruleId":"241","severity":1,"message":"257","line":3,"column":10,"nodeType":"243","messageId":"244","endLine":3,"endColumn":16},{"ruleId":"241","severity":1,"message":"276","line":6,"column":31,"nodeType":"243","messageId":"244","endLine":6,"endColumn":37},{"ruleId":"241","severity":1,"message":"250","line":6,"column":39,"nodeType":"243","messageId":"244","endLine":6,"endColumn":45},{"ruleId":"241","severity":1,"message":"277","line":6,"column":47,"nodeType":"243","messageId":"244","endLine":6,"endColumn":57},{"ruleId":"241","severity":1,"message":"278","line":6,"column":59,"nodeType":"243","messageId":"244","endLine":6,"endColumn":65},{"ruleId":"241","severity":1,"message":"251","line":6,"column":67,"nodeType":"243","messageId":"244","endLine":6,"endColumn":74},{"ruleId":"241","severity":1,"message":"279","line":6,"column":75,"nodeType":"243","messageId":"244","endLine":6,"endColumn":88},{"ruleId":"271","severity":1,"message":"272","line":9,"column":69,"nodeType":"255","messageId":"273","endLine":9,"endColumn":70},{"ruleId":"271","severity":1,"message":"272","line":17,"column":70,"nodeType":"255","messageId":"273","endLine":17,"endColumn":71},{"ruleId":"280","severity":1,"message":"281","line":10,"column":13,"nodeType":"260","endLine":14,"endColumn":15},{"ruleId":"241","severity":1,"message":"282","line":3,"column":8,"nodeType":"243","messageId":"244","endLine":3,"endColumn":26},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],"no-unused-vars","'AdminViewComplaint' is defined but never used.","Identifier","unusedVar","'ListPurchaseComponent' is defined but never used.","'about' is defined but never used.","'Link' is defined but never used.","'faPhone' is defined but never used.","'faEnvelope' is defined but never used.","'faUndo' is defined but never used.","'faUsers' is defined but never used.","'SupplierQuoteService' is defined but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","'Button' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'Form' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'PRODUCT_API_BASE_URL' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'faLock' is defined but never used.","'faUserPlus' is defined but never used.","'faUser' is defined but never used.","'faAddressCard' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'SoldProductService' is defined but never used.","no-global-assign","no-unsafe-negation"]