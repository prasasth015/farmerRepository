[{"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\index.js":"1","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\App.js":"2","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\registerServiceWorker.js":"3","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ProductComponent.jsx":"4","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\AdminLogin.jsx":"5","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListProductComponent.jsx":"6","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ViewSoldProductComponent.jsx":"7","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SoldProductComponent.jsx":"8","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\AdminViewComplaint.jsx":"9","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListSoldProductComponent.jsx":"10","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\FarmerLogin.jsx":"11","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\FarmerRegistration.jsx":"12","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ComplaintList.jsx":"13","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\AddComplaint.jsx":"14","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ViewComplaint.jsx":"15","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SupplierQuoteComponent.jsx":"16","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListQuoteComponent.jsx":"17","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ViewQuoteComponent.jsx":"18","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\UpdateQuoteComponent.jsx":"19","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SupplierLogin.jsx":"20","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\CreateSupplierComponent.jsx":"21","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\AdminLoginService.js":"22","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\FarmerService.jsx":"23","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\SupplierQuoteService.js":"24","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\SupplierService.js":"25","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\ProductService.js":"26"},{"size":347,"mtime":1611145714570,"results":"27","hashOfConfig":"28"},{"size":3648,"mtime":1611493286525,"results":"29","hashOfConfig":"28"},{"size":4595,"mtime":1611033885000,"results":"30","hashOfConfig":"28"},{"size":4520,"mtime":1611493153646,"results":"31","hashOfConfig":"28"},{"size":3877,"mtime":1611405340472,"results":"32","hashOfConfig":"28"},{"size":2792,"mtime":1611492736458,"results":"33","hashOfConfig":"28"},{"size":2037,"mtime":1611439630884,"results":"34","hashOfConfig":"28"},{"size":5747,"mtime":1611338206668,"results":"35","hashOfConfig":"28"},{"size":1375,"mtime":1611166695586,"results":"36","hashOfConfig":"28"},{"size":2571,"mtime":1611325822771,"results":"37","hashOfConfig":"28"},{"size":4047,"mtime":1611294840972,"results":"38","hashOfConfig":"28"},{"size":7657,"mtime":1611310163841,"results":"39","hashOfConfig":"28"},{"size":2769,"mtime":1611294840972,"results":"40","hashOfConfig":"28"},{"size":3025,"mtime":1611294840972,"results":"41","hashOfConfig":"28"},{"size":1367,"mtime":1611294840982,"results":"42","hashOfConfig":"28"},{"size":6847,"mtime":1611401865240,"results":"43","hashOfConfig":"28"},{"size":3777,"mtime":1611401865237,"results":"44","hashOfConfig":"28"},{"size":2190,"mtime":1611401865244,"results":"45","hashOfConfig":"28"},{"size":5074,"mtime":1611401865242,"results":"46","hashOfConfig":"28"},{"size":3399,"mtime":1611401865239,"results":"47","hashOfConfig":"28"},{"size":10349,"mtime":1611401865234,"results":"48","hashOfConfig":"28"},{"size":433,"mtime":1611405932711,"results":"49","hashOfConfig":"28"},{"size":569,"mtime":1611339197604,"results":"50","hashOfConfig":"28"},{"size":693,"mtime":1611235116683,"results":"51","hashOfConfig":"28"},{"size":275,"mtime":1611235116683,"results":"52","hashOfConfig":"28"},{"size":526,"mtime":1611493045339,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"kqflye",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\index.js",[],["114","115"],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\App.js",["116"],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\registerServiceWorker.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ProductComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\AdminLogin.jsx",["117","118","119","120","121"],"import React, { Component } from 'react'\r\nimport AdminLoginService from '../service/AdminLoginService'\r\nimport { Link } from \"react-router-dom\";\r\n//import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport './AdminLogin.css';\r\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faPhone, faEnvelope, faLock, faUndo, faUserPlus, faUser, faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nclass AdminLogin extends Component {\r\n  constructor(props) {\r\n      super(props)\r\n\r\n      this.state = {\r\n          adminUserName:\"\",\r\n          adminPassword:\"\"\r\n               \r\n      }\r\n      this.verifyLogin=this.verifyLogin.bind(this);\r\n      \r\n  }\r\n  changeNameHandler=(event) => {\r\n    this.setState({adminUserName: event.target.value});\r\n\r\n  }\r\n  changeUserPasswordHandler=(event) => {\r\n    this.setState({adminPassword: event.target.value});\r\n  }\r\n  verifyLogin=(e) => {\r\n    e.preventDefault();\r\n      let admin = {adminUserName: this.state.adminUserName, adminPassword: this.state.adminPassword};\r\n      console.log('admin => ' + JSON.stringify(admin));\r\n\r\n        AdminLoginService.login(this.state.adminUserName,this.state.adminPassword);\r\n        AdminLoginService.login(this.state.adminUserName,this.state.adminPassword).then((res) => {\r\n        this.setState({admin:res.data});\r\n        console.log(res.data);\r\n        console.log('hello');\r\n        if(\r\n          res.data.adminUserName === this.state.adminUserName &&\r\n          res.data.adminPassword === this.state.adminPassword\r\n        ){\r\n          alert(\"Login Sucessful\");\r\n         \r\n          this.props.history.push(\"/productList\");\r\n        }\r\n        else{\r\n          alert(\"Wrong Credentials\");\r\n        }\r\n      })\r\n     \r\n    }\r\n\r\n    \r\n\r\n\r\n\r\nrender() {\r\n  return (\r\n    <Row className=\"justify-content-md-center\" style={{ \"margin-top\": \"60px\" }}>\r\n  <Col xs={5}>\r\n    <Card className={\"border border-dark bg-white-dark\"} >\r\n      <Card.Header style={{ \"text-align\": \"center\" ,\"fontSize\":\"20px\"}}>\r\n        <FontAwesomeIcon icon={faUser} />LOG-IN\r\n                  </Card.Header>\r\n      <Card.Body>\r\n        \r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col}>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl  required autoComplete=\"off\" type=\"text\" name=\"adminUserName\" value={this.state.adminUserName} onChange={this.changeNameHandler}\r\n                className={\"bg-white text-dark\"} placeholder=\"Enter User Name\" />\r\n            </InputGroup>\r\n            \r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n          <Form.Group as={Col}>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><FontAwesomeIcon icon={faLock} /></InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl autoComplete=\"off\" type=\"password\"\r\n                name=\"password\" value={this.state.adminPassword} onChange={this.changeUserPasswordHandler}\r\n                className={\"bg-white text-dark\"} placeholder=\"Enter password\" />\r\n            </InputGroup>\r\n            \r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        \r\n        </Card.Body>\r\n            <Card.Footer style={{ \"text-align\": \"center\"}}>\r\n              <Button size=\"sm\" type=\"button\" variant=\"success\" style={{ \"width\":\"80%\",\"padding\":\"10px\"}} onClick={this.verifyLogin}>\r\n                <FontAwesomeIcon icon={faUserPlus} /> Log-In\r\n                            </Button>{' '}<br></br>\r\n                            \r\n            </Card.Footer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n\r\n   \r\n    \r\n         \r\n        \r\n  \r\n}\r\n}\r\nexport default AdminLogin;","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListProductComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ViewSoldProductComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SoldProductComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\AdminViewComplaint.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListSoldProductComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\FarmerLogin.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\FarmerRegistration.jsx",["122"],"import React, { Component } from 'react'\r\nimport FarmerService from '../service/FarmerService';\r\nimport \"./FarmerRegistration.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nconst addressRegex = RegExp(\r\n  /^[#.0-9a-zA-Z\\s,-]+$/\r\n);\r\n\r\nconst numberRegex = RegExp(\r\n  /^[0][1-9]\\d{9}$|^[1-9]\\d{9}$/\r\n);\r\n\r\nconst passwordRegex = RegExp(\r\n  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/\r\n);\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true;\r\n\r\n  // validate form errors being empty\r\n  Object.values(formErrors).forEach(val => {\r\n    val.length > 0 && (valid = false);\r\n  });\r\n\r\n  // validate the form was filled out\r\n  Object.values(rest).forEach(val => {\r\n    val === null && (valid = false);\r\n  });\r\n\r\n  return valid;\r\n};\r\n\r\nclass FarmerRegistration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      farmerName: '',\r\n      //farmerUserName: this.props.match.params.farmerUserName,\r\n      farmerUserName:'',\r\n      farmerAddress: '',\r\n      farmerContactNo: '',\r\n      farmerPassword: '',\r\n      \r\n      formErrors: {\r\n        farmerName: \"\",\r\n        farmerUserName: \"\",\r\n        farmerAddress: \"\",\r\n        farmerContactNo: \"\",\r\n        farmerPassword: \"\"\r\n        \r\n      }\r\n    };\r\n\r\n   \r\n  \r\n    this.saveFarmer =this.saveFarmer.bind(this);\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    // step 4\r\n    if (this.state.farmerUserName === '_add') {\r\n      return\r\n      \r\n    }\r\n  }\r\n\r\n\r\n  saveFarmer = (e) => {\r\n    e.preventDefault();\r\n    let farmer = { farmerName: this.state.farmerName, farmerUserName: this.state.farmerUserName, farmerAddress: this.state.farmerAddress, farmerContactNo: this.state.farmerContactNo, farmerPassword: this.state.farmerPassword };\r\n    if(this.state.password !== this.state.password)\r\n    alert(\"Given password and confirm password should be same \");\r\n    console.log('farmer => ' + JSON.stringify(farmer));\r\n\r\n    FarmerService.register(farmer).then(res => {\r\n      this.props.history.push('/farmerLogin');\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (formValid(this.state)) {\r\n      console.log(`\r\n          --SUBMITTING--\r\n          farmer Name: ${this.state.name}\r\n          User Name: ${this.state.farmerUserName}\r\n          Address: ${this.state.Address}\r\n          Contact Number: ${this.state.contactNumber}\r\n          password:${this.state.password}\r\n          \r\n        `);\r\n    } else {\r\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"farmerName\":\r\n        formErrors.farmerName =\r\n          value.length < 5 ? \"minimum 5 characaters required\" : \"\";\r\n        break;\r\n      case \"farmerUserName\":\r\n        formErrors.farmerUserName =\r\n          value.length < 5 ? \"minimum 5 characaters required\" : \"\";\r\n        break;\r\n      case \"farmerAddress\":\r\n        formErrors.farmerAddress = addressRegex.test(value)\r\n          ? \"\"\r\n          : \"Invalid Address \";\r\n        break;\r\n      case \"farmerContactNo\":\r\n        formErrors.farmerContactNo = numberRegex.test(value)\r\n          ? \"\"\r\n          : \"invalid Contact Number\";\r\n        break;\r\n      case \"farmerPassword\":\r\n        formErrors.farmerPassword = passwordRegex.test(value)\r\n          ? \"\"\r\n          : \"Enter valid password\";\r\n        break;\r\n     \r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n  };\r\n\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n    return (\r\n\r\n      <div className=\"wrapper\">\r\n        <div className=\"form-wrapper\">\r\n          <div> <h3 className=\"title\">Farmer Registration</h3></div>\r\n          <form onSubmit={this.handleSubmit} noValidate>\r\n            <div className=\"name\">\r\n              <label htmlFor=\"firstName\" className=\"farmerLable\">Farmer Name</label>\r\n              <input\r\n                className={formErrors.farmerName.length > 0 ? \"error\" : null}\r\n                placeholder=\"Name\"\r\n                type=\"text\"\r\n                name=\"farmerName\"\r\n                value={this.state.farmerName}\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.farmerName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.farmerName}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"farmerUserName\">\r\n              <label htmlFor=\"farmerUserName\" className=\"farmerLable\">UserName</label>\r\n              <input\r\n                className={formErrors.farmerUserName.length > 0 ? \"error\" : null}\r\n                placeholder=\"UserName\"\r\n                type=\"text\"\r\n                name=\"farmerUserName\"\r\n                value={this.state.farmerUserName}\r\n                \r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.farmerUserName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.farmerUserName}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"Address\">\r\n              <label htmlFor=\"Address\" className=\"farmerLable\">Address</label>\r\n              <input\r\n                className={formErrors.farmerAddress.length > 0 ? \"error\" : null}\r\n                placeholder=\"Address\"\r\n                type=\"Address\"\r\n                name=\"farmerAddress\"\r\n                value={this.state.farmerAddress}\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.farmerAddress.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.farmerAddress}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"contactNumber\">\r\n              <label htmlFor=\"contactNumber\" className=\"farmerLable\">Contact Number</label>\r\n              <input\r\n                className={formErrors.farmerContactNo.length > 0 ? \"error\" : null}\r\n                placeholder=\"contactNumber\"\r\n                type=\"contactNumber\"\r\n                name=\"farmerContactNo\"\r\n                value={this.state.farmerContactNo}\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.farmerContactNo.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.farmerContactNo}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"password\">\r\n              <label htmlFor=\"password\" className=\"farmerLable\">Password</label>\r\n              <input\r\n                className={formErrors.farmerPassword.length > 0 ? \"error\" : null}\r\n                placeholder=\"farmerPassword\"\r\n                type=\"farmerPassword\"\r\n                name=\"farmerPassword\"\r\n                value={this.state.farmerPassword}\r\n                noValidate\r\n                onChange={this.handleChange}\r\n              />\r\n              {formErrors.farmerPassword.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.farmerPassword}</span>\r\n              )}\r\n            </div>\r\n\r\n            \r\n\r\n            <div className=\"createAccount\">\r\n              <button className=\"button\" onClick={this.saveFarmer}>Create Account</button>\r\n              <small>Already Have an Account?  <Link to=\"/farmerLogin\" >Log In</Link></small>\r\n              \r\n\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default FarmerRegistration\r\n","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ComplaintList.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\AddComplaint.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ViewComplaint.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SupplierQuoteComponent.jsx",["123","124","125","126","127","128","129"],"import React, { Component } from 'react'\r\n import SupplierQuoteService from '../service/SupplierQuoteService';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./SupplierQuote.css\";\r\nimport {Row, Col, Card, Form, InputGroup, FormControl, Button} from 'react-bootstrap';\r\n\r\nclass SupplierQuoteComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            // step 2\r\n            quoteId: this.props.match.params.quoteId,\r\n            userName: '',\r\n            productName: '',\r\n            quantity: '',\r\n            quotePrice: '',\r\n            product: ''\r\n        }\r\n        this.changeUserNameHandler = this.changeUserNameHandler.bind(this);\r\n        this.changeProductNameHandler = this.changeProductNameHandler.bind(this);\r\n        this.changeQuantityHandler = this.changeQuantityHandler.bind(this);\r\n        this.changeQuotePriceHandler = this.changeQuotePriceHandler.bind(this);\r\n        this.changeProductHandler = this.changeProductHandler.bind(this);\r\n        this.saveOrUpdateQuote = this.saveOrUpdateQuote.bind(this);\r\n    }\r\n\r\n    // step 3\r\n    componentDidMount() {\r\n\r\n        // step 4\r\n        if (this.state.quoteId === '_add') {\r\n            return\r\n        } else {\r\n            SupplierQuoteService.getQuoteById(this.state.quoteId).then((res) => {\r\n                let supplierQuote = res.data;\r\n                this.setState({\r\n                    userName: supplierQuote.userName,\r\n                    productName: supplierQuote.productName,\r\n                    quantity: supplierQuote.quantity,\r\n                    quotePrice: supplierQuote.quotePrice,\r\n                    // product:supplierQuote.product\r\n                });\r\n            });\r\n        }\r\n    }\r\n    saveOrUpdateQuote = (e) => {\r\n        e.preventDefault();\r\n        let supplierQuote = { userName: this.state.userName, productName: this.state.productName, quantity: this.state.quantity, quotePrice: this.state.quotePrice }; //product: this.state.product\r\n        console.log('supplierQuote => ' + JSON.stringify(supplierQuote));\r\n\r\n        // SupplierQuoteService.insertQuote(supplierQuote).then(res => {\r\n        // this.props.history.push('/addQuote');\r\n\r\n        // step 5\r\n        if (this.state.quoteId === '_add') {\r\n            SupplierQuoteService.insertQuote(supplierQuote).then(res => {\r\n                this.props.history.push('/addQuote');\r\n            });\r\n        }\r\n        else {\r\n            SupplierQuoteService.updatePrice(supplierQuote, this.state.quoteId).then(res => {\r\n                this.props.history.push('/supplierQuote');\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    changeUserNameHandler = (event) => {\r\n        this.setState({ userName: event.target.value });\r\n    }\r\n\r\n    changeProductNameHandler = (event) => {\r\n        this.setState({ productName: event.target.value });\r\n    }\r\n\r\n    changeQuantityHandler = (event) => {\r\n        this.setState({ quantity: event.target.value });\r\n    }\r\n\r\n    changeQuotePriceHandler = (event) => {\r\n        this.setState({ quotePrice: event.target.value });\r\n    }\r\n\r\n    changeProductHandler = (event) => {\r\n        this.setState({ product: event.target.value });\r\n    }\r\n\r\n    addQuote() {\r\n        this.props.history.push('/add-supplierQuote/_add');\r\n    }\r\n\r\n    \r\n    cancel() {\r\n        this.props.history.push('/supplierQuote');\r\n    }\r\n    \r\n    getTitle() {\r\n        if (this.state.quoteId === '_add') {\r\n            return <h3 className=\"quote\">Add Quote</h3>\r\n        } else {\r\n            return <h3 className=\"text-center\">Update </h3>\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n           \r\n            <br></br>\r\n               <div className = \"container\">\r\n               \r\n                    <div className = \"row\">\r\n                        <div className = \"card col-md-6 offset-md-3 offset-md-3\">\r\n                        {\r\n                                this.getTitle()\r\n                            }\r\n                            <div className = \"card-body\">\r\n                                <form >\r\n                                    <div className=\"userName\">\r\n                                        <label className=\"Label\"> User Name: </label>\r\n                                        <input placeholder=\"User Name\" name=\"userName\" className=\"form-control\"\r\n                                            value={this.state.userName} onChange={this.changeUserNameHandler} />\r\n                                    </div>\r\n                                    <div className=\"Product\">\r\n                                        <label className=\"Label\"> Product Name: </label>\r\n                                        <input placeholder=\"Product Name\" name=\"ProductName\" className=\"form-control\"\r\n                                            value={this.state.productName}  onChange={this.changeProductNameHandler} />\r\n                                    </div>\r\n                                    <div className=\"quantity\">\r\n                                        <label className=\"Label\">Quantity: </label>\r\n                                        <input placeholder=\"Quantity\" name=\"quantity\" className=\"form-control\"\r\n                                            value={this.state.quantity} onChange={this.changeQuantityHandler} />\r\n                                    </div>\r\n                                    <div className=\"quotePrice\">\r\n                                        <label className=\"Label\">Quote Price: </label>\r\n                                        <input placeholder=\"Quote Price\" name=\"quotePrice\" className=\"form-control\"\r\n                                            value={this.state.quotePrice}  onChange={this.changeQuotePriceHandler} />\r\n                                    </div>\r\n                                    {/* <div className = \"form-group\">\r\n                                            <label>Product: </label>\r\n                                            <input placeholder=\"Product\" name=\"product\" className=\"form-control\" \r\n                                                value={this.state.product} onChange={this.changeProductHandler}/>\r\n                                        </div> */}\r\n                                    <div className=\"button\">\r\n                                    <button className=\"btn btn-success\"  onClick={this.saveOrUpdateQuote}>Save</button>\r\n                                        <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{ marginLeft: \"10px\" }}>Cancel</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SupplierQuoteComponent","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ListQuoteComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\ViewQuoteComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\UpdateQuoteComponent.jsx",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\SupplierLogin.jsx",["130","131","132","133","134","135"],"import React, { Component } from 'react'\r\n// import SupplierService from '../service/SupplierService'\r\nimport { Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport {Row, Col, Card, Form, InputGroup, FormControl, Button} from 'react-bootstrap';\r\n\r\n\r\nconst passwordRegex = RegExp(\r\n  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/\r\n);\r\n\r\nclass SupplierLogin extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      supplierUserName: \"\",\r\n      password: \"\"\r\n\r\n    }\r\n    this.quoteList = this.quoteList.bind(this);\r\n  }\r\n\r\n  changeSupplierUserNameHandler = (event) => {\r\n    this.setState({ supplierUserName: event.target.value });\r\n\r\n}\r\nchangePasswordHandler = (event) => {\r\n    this.setState({ password: event.target.value });\r\n}\r\n\r\nquoteList() {\r\n  this.props.history.push('/supplierQuote');\r\n}\r\n\r\nhandleChange = e => {\r\n  e.preventDefault();\r\n  const { name, value } = e.target;\r\n  let formErrors = { ...this.state.formErrors };\r\n\r\n  switch (name) {\r\n   \r\n    case \"supplierUserName\":\r\n      formErrors.supplierUserName =\r\n        value.length < 5 ? \"minimum 5 characters required\" : \"\";\r\n      break;\r\n \r\n    case \"password\":\r\n      formErrors.password = passwordRegex.test(value)\r\n        ? \"\"\r\n        : \"Enter valid password\";\r\n      break;\r\n   \r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n};\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login-wrap\">\r\n        <div className=\"login_wrapper\">\r\n          <div> <h1 className=\"loginTitle\">Log-In</h1></div>\r\n          <form>\r\n            <div className=\"supplierUserName\">\r\n              <label htmlFor=\"supplierUserName\" className=\"loginLable\">UserName</label>\r\n              <input\r\n                //className={formErrors.supplierUserName.length > 0 ? \"error\" : null}\r\n                placeholder=\"UserName\"\r\n                type=\"text\"\r\n                name=\"supplierUserName\"\r\n                value={this.state.supplierUserName}\r\n                required\r\n                onChange={this.handleChange}\r\n              />\r\n              {/* {formErrors.supplierUserName.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.supplierUserName}</span>\r\n              )} */}\r\n            </div>\r\n\r\n            <div className=\"password\">\r\n              <label htmlFor=\"password\" className=\"loginLable\">Password</label>\r\n              <input\r\n                // className={formErrors.password.length > 0 ? \"error\" : null}\r\n                placeholder=\"password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n               required\r\n                onChange={this.handleChange}\r\n              />\r\n              {/* {formErrors.password.length > 0 && (\r\n                <span className=\"errorMessage\">{formErrors.password}</span>\r\n              )} */}\r\n            </div>\r\n            <div className=\"createAccount\">\r\n            <Button className=\"button\"  disabled={ this.state.supplierUserName.length === 0 || this.state.password.length === 0 } onClick={this.quoteList}>Log-In</Button>\r\n              <small><Link to=\"/add-supplier/:supplierUserName\">New Supplier? - Sign-Up</Link></small>\r\n\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SupplierLogin;","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\components\\CreateSupplierComponent.jsx",["136","137","138","139","140","141","142"],"\r\nimport React, { Component } from 'react';\r\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SupplierService from '../service/SupplierService';\r\nimport { faPhone, faEnvelope, faLock, faUndo, faUserPlus, faUser, faUsers } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst addressRegex = RegExp(\r\n  /^[#.0-9a-zA-Z\\s,-]+$/\r\n);\r\n\r\nconst numberRegex = RegExp(\r\n  /^[0][1-9]\\d{9}$|^[1-9]\\d{9}$/\r\n);\r\n\r\nconst passwordRegex = RegExp(\r\n  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,20}$/\r\n);\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true;\r\n\r\n  // validate form errors being empty\r\n  Object.values(formErrors).forEach(val => {\r\n    val.length > 0 && (valid = false);\r\n  });\r\n\r\n  // validate the form was filled out\r\n  Object.values(rest).forEach(val => {\r\n    val === null && (valid = false);\r\n  });\r\n\r\n  return valid;\r\n};\r\n\r\nclass CreateSupplierComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      supplierName: '',\r\n      supplierUserName:'',\r\n      supplierAddress: '',\r\n      supplierContactNumber: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      formErrors: {\r\n        supplierName: \"\",\r\n        supplierUserName: \"\",\r\n        supplierAddress: \"\",\r\n        supplierContactNumber: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n      }\r\n    };\r\n\r\n    this.saveSupplier = this.saveSupplier.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    // step 4\r\n    if (this.state.supplierUserName === '_add') {\r\n      return\r\n    }\r\n  }\r\n\r\n  saveSupplier = (e) => {\r\n    e.preventDefault();\r\n    let supplier = { supplierName: this.state.supplierName, supplierUserName: this.state.supplierUserName, supplierAddress: this.state.supplierAddress, supplierContactNumber: this.state.supplierContactNumber, password: this.state.password, confirmPassword: this.state.confirmPassword };\r\n    if (this.state.password !== this.state.confirmPassword)\r\n      alert(\"Given password and confirm password should be same \");\r\n    console.log('supplier => ' + JSON.stringify(supplier));\r\n\r\n    SupplierService.createSupplier(supplier).then(res => {\r\n      this.props.history.push('/createSupplier');\r\n\r\n    });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (formValid(this.state)) {\r\n      console.log(`\r\n          --SUBMITTING--\r\n          Supplier Name: ${this.state.name}\r\n          User Name: ${this.state.supplierUserName}\r\n          Address: ${this.state.Address}\r\n          Contact Number: ${this.state.contactNumber}\r\n          password:${this.state.password}\r\n          confirmPassword:${this.state.confirmPassword}\r\n        `);\r\n    } else {\r\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"supplierName\":\r\n        formErrors.supplierName =\r\n          value.length < 5 ? \"minimum 5 characters required\" : \"\";\r\n        break;\r\n      case \"supplierUserName\":\r\n        formErrors.supplierUserName =\r\n          value.length < 5 ? \"minimum 5 characters required\" : \"\";\r\n        break;\r\n      case \"supplierAddress\":\r\n        formErrors.supplierAddress = addressRegex.test(value)\r\n          ? \"\"\r\n          : \"Invalid Address \";\r\n        break;\r\n      case \"supplierContactNumber\":\r\n        formErrors.supplierContactNumber = numberRegex.test(value)\r\n          ? \"\"\r\n          : \"invalid Contact Number\";\r\n        break;\r\n      case \"password\":\r\n        formErrors.password = passwordRegex.test(value)\r\n          ? \"\"\r\n          : \"Enter valid password (A-z),(!@#),(0-9)\";\r\n        break;\r\n      case \"confirmPassword\":\r\n        formErrors.confirmPassword = passwordRegex.test(value) ? \"\" : \"Enter valid password (A-z),(!@#),(0-9)\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\r\n  };\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    return (\r\n      <Row className=\"justify-content-md-center\" style={{ \"margin-top\": \"60px\" }}>\r\n        <Col xs={5}>\r\n          <Card className={\"border border-dark bg-white-dark\"} >\r\n            <Card.Header style={{ \"text-align\": \"center\" ,\"fontSize\":\"20px\"}}>\r\n              <FontAwesomeIcon icon={faUsers} />SIGN-UP\r\n                        </Card.Header>\r\n            <Card.Body>\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.supplierName.length > 0 ? \"error\" : null} autoComplete=\"off\" type=\"text\" name=\"supplierName\" value={this.state.supplierName} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark \"} placeholder=\"Enter Name\" />\r\n                  </InputGroup>\r\n                  {formErrors.supplierName.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.supplierName}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.supplierUserName.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"text\" name=\"supplierUserName\" value={this.state.supplierUserName} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter User Name\" />\r\n                  </InputGroup>\r\n                  {formErrors.supplierUserName.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.supplierUserName}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faEnvelope} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.supplierAddress.length > 0 ? \"error\" : null} required autoComplete=\"off\" type=\"textarea\" name=\"supplierAddress\" value={this.state.supplierAddress} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter Address\" />\r\n                  </InputGroup>\r\n                  {formErrors.supplierAddress.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.supplierAddress}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faPhone} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.supplierContactNumber.length > 0 ? \"error\" : null} autoComplete=\"off\" type=\"contactNumber\"\r\n                      name=\"supplierContactNumber\" value={this.state.supplierContactNumber} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter Contact Number\" />\r\n                  </InputGroup>\r\n                  {formErrors.supplierContactNumber.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.supplierContactNumber}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faLock} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.confirmPassword.length > 0 ? \"error\" : null} autoComplete=\"off\" type=\"password\"\r\n                      name=\"password\" value={this.state.password} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter password\" />\r\n                  </InputGroup>\r\n                  {formErrors.password.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.password}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n              <Form.Row>\r\n                <Form.Group as={Col}>\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text><FontAwesomeIcon icon={faLock} /></InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl className={formErrors.confirmPassword.length > 0 ? \"error\" : null} autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\r\n                      value={this.state.confirmPassword} onChange={this.handleChange}\r\n                      className={\"bg-white text-dark\"} placeholder=\"Enter Confirm password\" />\r\n                  </InputGroup>\r\n                  {formErrors.confirmPassword.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.confirmPassword}</span>\r\n                  )}\r\n                </Form.Group>\r\n              </Form.Row>\r\n            </Card.Body>\r\n            <Card.Footer style={{ \"text-align\": \"center\"}}>\r\n              <Button size=\"sm\" type=\"button\" variant=\"success\" style={{ \"width\":\"80%\",\"padding\":\"10px\"}} onClick={this.saveSupplier}>\r\n                <FontAwesomeIcon icon={faUserPlus} /> SIGN-UP\r\n                            </Button>{' '}<br></br>\r\n                            <small><Link to=\"/supplierLogin\">Already Have an Account? - Log-in</Link></small>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default CreateSupplierComponent","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\AdminLoginService.js",["143"],"\r\nimport axios from 'axios';\r\n\r\n//const API_BASE_URL = \"http://localhost:8082/api/v1\";\r\n\r\nclass AdminLoginService {\r\n\r\n    login(adminUserName,adminPassword){\r\n        return axios.get(\"http://localhost:8082/api/v1/adminlogin\" +'/'+adminUserName+\"/\"+adminPassword);\r\n    }\r\n\r\n    register(admin){\r\n        return axios.post(\"http://localhost:8082/api/v1/admin\",admin);\r\n    }\r\n   \r\n\r\n   \r\n}\r\n\r\nexport default new  AdminLoginService()","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\FarmerService.jsx",["144","145"],"\r\nimport axios from 'axios';\r\n\r\n//const API_BASE_URL = \"http://localhost:8082/api/v1\";\r\n\r\nclass FarmerService {\r\n\r\n    login(farmerUserName,farmerPassword){\r\n        return axios.get(\"http://localhost:8082/api/v1/farmerlogin\" +'/'+farmerUserName+\"/\"+farmerPassword);\r\n    }\r\n\r\n    register(farmer){\r\n        return axios.post(\"http://localhost:8082/api/v1/farmer\",farmer);\r\n    }\r\n    getFarmerById(farmerUserName)\r\n    {\r\n        return axios.get(\"http://localhost:8082/api/v1/getfarmerbyid\"+\"/\"+farmerUserName);\r\n    }\r\n\r\n   \r\n}\r\n\r\nexport default new  FarmerService()","E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\SupplierQuoteService.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\SupplierService.js",[],"E:\\farmer-system-frond-end-master\\farmersystem1\\src\\service\\ProductService.js",["146","147"],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":11,"column":8,"nodeType":"154","messageId":"155","endLine":11,"endColumn":26},{"ruleId":"152","severity":1,"message":"156","line":3,"column":10,"nodeType":"154","messageId":"155","endLine":3,"endColumn":14},{"ruleId":"152","severity":1,"message":"157","line":9,"column":10,"nodeType":"154","messageId":"155","endLine":9,"endColumn":17},{"ruleId":"152","severity":1,"message":"158","line":9,"column":19,"nodeType":"154","messageId":"155","endLine":9,"endColumn":29},{"ruleId":"152","severity":1,"message":"159","line":9,"column":39,"nodeType":"154","messageId":"155","endLine":9,"endColumn":45},{"ruleId":"152","severity":1,"message":"160","line":9,"column":67,"nodeType":"154","messageId":"155","endLine":9,"endColumn":74},{"ruleId":"161","severity":1,"message":"162","line":79,"column":8,"nodeType":"163","messageId":"164","endLine":79,"endColumn":51},{"ruleId":"152","severity":1,"message":"165","line":5,"column":9,"nodeType":"154","messageId":"155","endLine":5,"endColumn":12},{"ruleId":"152","severity":1,"message":"166","line":5,"column":14,"nodeType":"154","messageId":"155","endLine":5,"endColumn":17},{"ruleId":"152","severity":1,"message":"167","line":5,"column":19,"nodeType":"154","messageId":"155","endLine":5,"endColumn":23},{"ruleId":"152","severity":1,"message":"168","line":5,"column":25,"nodeType":"154","messageId":"155","endLine":5,"endColumn":29},{"ruleId":"152","severity":1,"message":"169","line":5,"column":31,"nodeType":"154","messageId":"155","endLine":5,"endColumn":41},{"ruleId":"152","severity":1,"message":"170","line":5,"column":43,"nodeType":"154","messageId":"155","endLine":5,"endColumn":54},{"ruleId":"152","severity":1,"message":"171","line":5,"column":56,"nodeType":"154","messageId":"155","endLine":5,"endColumn":62},{"ruleId":"152","severity":1,"message":"165","line":6,"column":9,"nodeType":"154","messageId":"155","endLine":6,"endColumn":12},{"ruleId":"152","severity":1,"message":"166","line":6,"column":14,"nodeType":"154","messageId":"155","endLine":6,"endColumn":17},{"ruleId":"152","severity":1,"message":"167","line":6,"column":19,"nodeType":"154","messageId":"155","endLine":6,"endColumn":23},{"ruleId":"152","severity":1,"message":"168","line":6,"column":25,"nodeType":"154","messageId":"155","endLine":6,"endColumn":29},{"ruleId":"152","severity":1,"message":"169","line":6,"column":31,"nodeType":"154","messageId":"155","endLine":6,"endColumn":41},{"ruleId":"152","severity":1,"message":"170","line":6,"column":43,"nodeType":"154","messageId":"155","endLine":6,"endColumn":54},{"ruleId":"152","severity":1,"message":"159","line":6,"column":39,"nodeType":"154","messageId":"155","endLine":6,"endColumn":45},{"ruleId":"172","severity":1,"message":"173","line":158,"column":23,"nodeType":"174","endLine":158,"endColumn":56},{"ruleId":"172","severity":1,"message":"173","line":173,"column":23,"nodeType":"174","endLine":173,"endColumn":55},{"ruleId":"172","severity":1,"message":"173","line":188,"column":23,"nodeType":"174","endLine":188,"endColumn":55},{"ruleId":"172","severity":1,"message":"173","line":204,"column":23,"nodeType":"174","endLine":204,"endColumn":55},{"ruleId":"172","severity":1,"message":"173","line":220,"column":23,"nodeType":"174","endLine":220,"endColumn":55},{"ruleId":"172","severity":1,"message":"173","line":236,"column":23,"nodeType":"174","endLine":236,"endColumn":55},{"ruleId":"175","severity":1,"message":"176","line":9,"column":68,"nodeType":"163","messageId":"177","endLine":9,"endColumn":69},{"ruleId":"175","severity":1,"message":"176","line":9,"column":69,"nodeType":"163","messageId":"177","endLine":9,"endColumn":70},{"ruleId":"175","severity":1,"message":"176","line":17,"column":70,"nodeType":"163","messageId":"177","endLine":17,"endColumn":71},{"ruleId":"152","severity":1,"message":"178","line":3,"column":7,"nodeType":"154","messageId":"155","endLine":3,"endColumn":27},{"ruleId":"175","severity":1,"message":"176","line":18,"column":71,"nodeType":"163","messageId":"177","endLine":18,"endColumn":72},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'AdminViewComplaint' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'faPhone' is defined but never used.","'faEnvelope' is defined but never used.","'faUndo' is defined but never used.","'faUsers' is defined but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'Form' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'PRODUCT_API_BASE_URL' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]